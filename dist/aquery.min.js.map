{"version":3,"file":"aquery.min.js","sources":["../src/aquery.js"],"sourcesContent":["// aquery\r\n(function ($) {\r\n    const aq = aquery = function (arg, arg2) {\r\n        return new aquery.fn.init(arg, arg2);\r\n    };\r\n\r\n    const dataWeakMap = new WeakMap();\r\n    const displayWeakMap = new WeakMap();\r\n\r\n    const isUndef = o => o === undefined;\r\n    const isStr = (arg) => typeof arg === 'string';\r\n    const isFunc = (arg) => typeof arg === 'function';\r\n    const isAquery = (arg) => arg instanceof aquery && arg?.nodes;\r\n    const isObject = (obj) => typeof obj === 'object' && !isNull(obj);\r\n\r\n    if (isUndef($)) {\r\n        jQuery = $ = window.$ = window.jQuery = window.aquery = aquery;\r\n    }\r\n\r\n    const toLoadOnReady = [];\r\n    let ready = false;\r\n    const onDocReady = func => {\r\n        if (ready) {\r\n            // timeout to let inline scripts execute before doc.ready\r\n            setTimeout(func);\r\n        }\r\n        else {\r\n            toLoadOnReady.push(func);\r\n        }\r\n    };\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        ready = true;\r\n        // Using setTimeout to delay function execution.\r\n        // If f starts a Promise.all([plain value]).then(f1), f1 will execute before the next iteration of loop due to Promise microtask queue processing.\r\n        loop(toLoadOnReady, f => setTimeout(f));\r\n        //loop(toLoadOnReady, f => { f(); });        \r\n    });\r\n\r\n    const addClasses = (elm, name) => elm.classList.add(...(name || '').trim().split(' ').filter(Boolean));\r\n    const remClasses = (elm, name) => elm.classList.remove(...(name || '').trim().split(' ').filter(Boolean));\r\n    const toggleClasses = (element, classes) => {\r\n        classes.split(' ').filter(Boolean).forEach(cls => element.classList.toggle(cls));\r\n    };\r\n\r\n    aquery.extend = function (a, b) {\r\n        if (a === true) {\r\n            // deep clone                \r\n            const [, ...nargs] = arguments;\r\n            return extend(...nargs);\r\n        }\r\n\r\n        if (len(arguments) === 1) {\r\n            return Object.assign(this, a);\r\n        }\r\n\r\n        return Object.assign(...arguments);\r\n    }\r\n\r\n    function isAdeferred(p) {\r\n        return p instanceof adeferred;\r\n    }\r\n\r\n    function mergeErrIntoAdeferred(err, adf) {\r\n        if (err) {\r\n            adf.errorThrown = err;\r\n            adf.statusText = err.message;\r\n            adf.status = err?.response?.status;\r\n        }\r\n    }\r\n\r\n    const adeferred = function (arg) {\r\n        if (len(arguments) > 1) {\r\n            this.args = arguments;\r\n            const allprom = [...arguments]\r\n                .map(prom => isAdeferred(prom) ? prom.promise : prom);\r\n            this.promise = Promise.all([...allprom]);\r\n        }\r\n        else if (isFunc(arg?.then)) {\r\n            if (isAdeferred(arg)) {\r\n                this.adeferred = arg;\r\n\r\n                if (arg.res) {\r\n                    if (arg.res instanceof Promise) {\r\n                        this.promise = arg.res\r\n                    }\r\n                    else {\r\n                        this.res = arg.res;\r\n                    }\r\n                }\r\n                else if (arg.promise) {\r\n                    this.promise = arg.promise;\r\n                }\r\n            }\r\n            else {\r\n                this.promise = arg;\r\n            }\r\n        }\r\n        else {\r\n            this.res = arg;\r\n        }\r\n    }\r\n\r\n    function then(success, failure) {\r\n        const self = this;\r\n        if (isUndef(self.promise)) {\r\n            let sres = success(self.res);\r\n            self.res = sres;\r\n        } else {\r\n            const failureFunc = failure ? (arg1) => {\r\n                mergeErrIntoAdeferred(arg1, self);\r\n                failure(self);\r\n            } : null;\r\n\r\n            self.promise = self.promise.then(\r\n                function (res) {\r\n                    const ares = self.adeferred?.res;\r\n                    if (ares) {\r\n                        res = ares;\r\n                    }\r\n\r\n                    let sres;\r\n                    if (self.args) {\r\n                        const pairedResults = res.map((result, i) => {\r\n                            const thennable = self.args[i];\r\n                            const status = thennable.statusText;\r\n                            if (thennable.res) {\r\n                                result = thennable.res;\r\n                            }\r\n\r\n                            return status ? [result, status] : result;\r\n                        });\r\n\r\n                        sres = success(...pairedResults);\r\n                    }\r\n                    else {\r\n                        sres = success(res);\r\n                    }\r\n\r\n                    self.res = sres || res;\r\n                    self.statusText = null;\r\n\r\n                    return sres || res;\r\n                },\r\n                failureFunc);\r\n        }\r\n\r\n        return self;\r\n    }\r\n\r\n    adeferred.prototype.done = adeferred.prototype.then = then;\r\n\r\n    adeferred.prototype.fail = function (func) {\r\n        if (!isUndef(this.promise)) {\r\n            this.promise.catch((err) => {\r\n                mergeErrIntoAdeferred(err, this);\r\n                func(this);\r\n            })\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    adeferred.prototype.always = function () {\r\n        const alwaysArgs = arguments;\r\n        const exec = () => loop(alwaysArgs, f => f());\r\n\r\n        if (!isUndef(this.promise)) {\r\n            this.promise.finally(exec);\r\n        }\r\n        else {\r\n            exec();\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    aq.when = function () {\r\n        return new adeferred(...arguments);\r\n    }\r\n\r\n    aq.getScript = (url, success) => aq.ajax({ url, dataType: 'script', success });\r\n\r\n    aq.ajax = function (options, opt2) {\r\n        let url1;\r\n        if (isStr(options)) {\r\n            url1 = options;\r\n            options = opt2;\r\n        }\r\n\r\n        let { url, data, traditional, error, dataType, contentType, xhrFields } = options;\r\n\r\n        let method = options.method || options.type || 'get';\r\n\r\n        if (url1) {\r\n            url = url1;\r\n        }\r\n\r\n        method = method.toLowerCase();\r\n\r\n        if (method == 'get') traditional = true;\r\n\r\n        function serializeData(data) {            \r\n            if (!data) return '';\r\n            if (!traditional && contentType == 'application/json') { return JSON.stringify(data); }\r\n\r\n            if (!Array.isArray(data)) {\r\n                data = serlObj(data);\r\n            }\r\n\r\n            return data.map(item => { return encodeURIComponent(item.name) + '=' + encodeURIComponent(item.value); }).join('&');\r\n        }\r\n\r\n        const fetchOptions = {\r\n            method: method,\r\n            headers: { \"X-Requested-With\": \"XMLHttpRequest\" }\r\n        };\r\n\r\n        if (method === 'get') {\r\n            const queryString = serializeData(data);\r\n            if (queryString) {\r\n                url += url.includes('?') ? `&${queryString}` : `?${queryString}`;\r\n            }\r\n        }\r\n        else {\r\n            if (data instanceof FormData) {\r\n                fetchOptions.body = data;\r\n                // Content-Type is handled automatically by the browser\r\n            }\r\n            else {\r\n                fetchOptions.body = serializeData(data);\r\n                fetchOptions.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n            }\r\n        }\r\n\r\n        const promise = fetch(url, fetchOptions);\r\n\r\n        aq(document).trigger('ajaxSend', [promise, options]);\r\n\r\n        const xhr = aquery.when(promise\r\n            .then(response => {\r\n                const contentType = response.headers.get('Content-Type');\r\n\r\n                if (!response.ok) {\r\n                    return response.text().then(text => {\r\n                        let err = new Error(response.statusText);\r\n                        err.response = response;\r\n                        err.responseText = text;\r\n\r\n                        throw err;\r\n                    });\r\n                }\r\n                \r\n                xhr.statusText = response.statusText;\r\n                if (xhrFields?.responseType == 'blob') {\r\n                    return response.blob();\r\n                }\r\n                else if (contentType?.includes('application/json')) {\r\n                    return response.json();\r\n                } else {\r\n                    return response.text();\r\n                }\r\n            })\r\n            .then(data => {\r\n                if (dataType == 'script') {\r\n                    const scriptElement = document.createElement('script');\r\n                    scriptElement.text = data;\r\n\r\n                    if (options.scriptAttrs) {\r\n                        for (const [key, value] of Object.entries(options.scriptAttrs)) {\r\n                            scriptElement.setAttribute(key, value);\r\n                        }\r\n                    }\r\n\r\n                    document.head.appendChild(scriptElement).parentNode.removeChild(scriptElement);\r\n                }\r\n\r\n                options.success && options.success(data);\r\n                return data;\r\n            })\r\n            .catch(err => {\r\n                aq(document).trigger('ajaxError', [promise, options, err]);\r\n                error && error(err);\r\n                throw err;\r\n            })\r\n            .finally(() => {\r\n                options.complete && options.complete();\r\n                aq(document).trigger('ajaxComplete', [promise, options]);\r\n            }));\r\n\r\n        return xhr;\r\n    }\r\n\r\n    aq.get = function (urlOrOpt, data, success, { method } = {}) {\r\n        if (isFunc(data)) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n\r\n        if (urlOrOpt.url) {\r\n            urlOrOpt.method = 'post';\r\n            return aq.ajax(urlOrOpt, data, success);\r\n        }\r\n\r\n        return aq.ajax({ url: urlOrOpt, data, success, method });\r\n    }\r\n\r\n    aq.post = (url, data, success) => aq.get(url, data, success, { method: 'post' });\r\n\r\n    aq.inArray = (val, arr) => Array.from(arr).indexOf(val);\r\n\r\n    aq.grep = (array, callback) => array.filter((item, index) => callback(item, index));\r\n\r\n    aq.each = (array, f) => loop(array, function (it, ix) { return f(ix, it) });\r\n\r\n    aq.Event = function (type) {\r\n        const [name, namespace] = type.split('.', 2);\r\n        const initDict = { cancelable: true, bubbles: true, isTrusted: true };\r\n        let init = name == 'click' ? MouseEvent : Event;\r\n        let ev = new init(name, initDict);\r\n        ev.namespace = namespace;\r\n\r\n        return ev;\r\n    };\r\n\r\n    aq.map = (array, f) => array.map(f);\r\n\r\n    const isSelector = (node, selector) => {\r\n        if (!node.matches) return;\r\n        if (isNullOrEmp(selector)) {\r\n            return true;\r\n        }\r\n\r\n        const res = customSelector([node], selector, { useFilter: 1 });\r\n        return len(res) === 1;\r\n    };\r\n\r\n    const closestRanked = (node, selector) => {\r\n        const closestRankRed = (node, selector, rank) => {\r\n            if (!node) return;\r\n            if (isSelector(node, selector)) return [node, rank];\r\n            return closestRankRed(node.parentNode, selector, rank + 1);\r\n        };\r\n\r\n        return closestRankRed(node, selector, 0);\r\n    };\r\n\r\n    const closestSelector = (node, selector) => {\r\n        if (!node.closest) return;\r\n\r\n        const res = closestRanked(node, selector);\r\n        if (len(res)) return res[0];\r\n    }\r\n\r\n    const recalcAqArr = aqthis => {\r\n        loop(aqthis.nodes, (n, i) => aqthis[i] = n);\r\n        aqthis.length = len(aqthis.nodes);\r\n    };\r\n\r\n    function remNode(n, detach) {\r\n        if (!detach) {\r\n            n.aweEvs = null;\r\n        }\r\n\r\n        n.remove();\r\n    }\r\n\r\n    // force reflow, for subsequent .css changes transitions to work\r\n    const reflow = self => {\r\n        const f = firstNode(self)\r\n        if (f) f.offsetWidth;\r\n        return self;\r\n    };\r\n\r\n    aquery.fn = aquery.prototype = {\r\n        init: function (arg, arg2) {\r\n\r\n            if (isFunc(arg)) {\r\n                onDocReady(arg, arg2);\r\n                return;\r\n            }\r\n\r\n            // html\r\n            if (typeof arg === 'string' && arg.startsWith('<')) {\r\n                arg = strToNode(arg);\r\n            }\r\n\r\n            this.setNodes(arg);\r\n\r\n            return this;\r\n        },\r\n        get: function (i) {\r\n            if (isUndef(i)) {\r\n                return this.nodes;\r\n            }\r\n\r\n            return this.nodes[i];\r\n        },\r\n        ajaxComplete: function (func) {\r\n            return aq(document).on('ajaxComplete', func);\r\n        },\r\n        ajaxError: function (func) {\r\n            return aq(document).on('ajaxError', func);\r\n        },\r\n        wrap: function (str) {\r\n            const wrapperNode = strToNode(str);\r\n            this.before(wrapperNode);\r\n            this.appendTo(wrapperNode);\r\n            return this;\r\n        },\r\n        wrapAll: function (str) {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                const wrap = strToNode(str);\r\n                this.parent().append(wrap);\r\n                loop(this.nodes, n => aquery(wrap).append(n));\r\n            }\r\n\r\n            return this;\r\n        },\r\n        each: function (func) {\r\n            loop(this.nodes, function (node, i) {\r\n                return func.call(node, i, node);\r\n            });\r\n            return this;\r\n        },\r\n        data: function (name, val) {\r\n            const f = firstNode(this);\r\n            const rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/; // test for json \r\n            if (f) {\r\n                let elmData = dataWeakMap.get(f) || {};\r\n\r\n                if (len(arguments) == 0) {\r\n                    return elmData;\r\n                }\r\n\r\n                if (len(arguments) == 1) {\r\n\r\n                    if (isObject(name)) {\r\n                        elmData = aq.extend({}, elmData, name);\r\n                        dataWeakMap.set(f, elmData);\r\n                        return this;\r\n                    }\r\n\r\n                    let data = elmData[name];\r\n\r\n                    if (isUndef(data) && f.dataset) {\r\n                        data = f.dataset[name];\r\n\r\n                        if (typeof data === \"string\") {\r\n                            try {\r\n                                data = data === \"true\" ? true :\r\n                                    data === \"false\" ? false :\r\n                                        data === \"null\" ? null :\r\n                                            +data + \"\" === data ? +data : // <- This line converts numeric string to Number\r\n                                                rbrace.test(data) ? JSON.parse(data) : data;\r\n                            } catch (e) { }\r\n                        }\r\n                    }\r\n\r\n                    return data;\r\n                }\r\n\r\n                // set\r\n                elmData[name] = val;\r\n                dataWeakMap.set(f, elmData);\r\n\r\n                return this;\r\n            }\r\n        },\r\n        first: function () {\r\n            return aquery(firstNode(this));\r\n        },\r\n        last: function () {\r\n            const nodes = this.nodes;\r\n            const l = len(nodes);\r\n\r\n            if (l) {\r\n                return aquery(nodes[l - 1]);\r\n            }\r\n\r\n            return aquery();\r\n        },\r\n        toArray: function () {\r\n            return Array.from(this);\r\n        },\r\n        find: function (selector) {\r\n            const res = new Set();\r\n\r\n            loop(this.nodes, n => {\r\n                customSelector([n], selector).forEach(r => res.add(r));\r\n            });\r\n\r\n            return aquery(Array.from(res));\r\n        },\r\n        children: function (selector) {\r\n            const res = new Set();\r\n            loop(this.nodes, n => {\r\n                customSelector(Array.from(n.children), selector, { useFilter: 1 }).forEach(r => res.add(r));\r\n            });\r\n\r\n            return aquery(Array.from(res));\r\n        },\r\n        nextUntil(selector, filterStr, { prev } = {}) {\r\n            const res = new Set();\r\n            const nxprop = prev ? 'previousElementSibling' : 'nextElementSibling';\r\n            loop(this.nodes, n => {\r\n                let nx = n[nxprop];\r\n\r\n                while (nx) {\r\n                    if (isSelector(nx, selector)) {\r\n                        break;\r\n                    }\r\n\r\n                    if (isSelector(nx, filterStr)) {\r\n                        res.add(nx);\r\n                    }\r\n                    nx = nx[nxprop];\r\n                }\r\n            });\r\n\r\n            return aq(Array.from(res));\r\n        },\r\n        prevUntil(selector, filterStr) {\r\n            return this.nextUntil(selector, filterStr, { prev: 1 });\r\n        },\r\n        filter: function (arg) {\r\n            let res;\r\n            if (isStr(arg)) {\r\n                res = customSelector(this.nodes, arg, { useFilter: 1 });\r\n            }\r\n\r\n            if (isFunc(arg)) {\r\n                res = (this?.nodes || []).filter((n, i) => arg.call(n, i, n));\r\n            }\r\n\r\n            return aquery(res);\r\n        },\r\n        closest: function (arg) {\r\n            function isAncestor(current, nodeWeLookFor) {\r\n                if (isNull(current)) return;\r\n                if (current === nodeWeLookFor) return true;\r\n                return isAncestor(current.parentNode, nodeWeLookFor);\r\n            }\r\n\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                if (isStr(arg)) {\r\n                    return aquery(closestSelector(f, arg));\r\n                }\r\n                else {\r\n                    let argNode = isAquery(arg) ? firstNode(arg) : arg;\r\n                    if (isAncestor(f, argNode)) {\r\n                        return aquery(argNode);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return aquery();\r\n        },\r\n        parents: function (arg) { return this.closest(arg); },\r\n        attr: function (name, val) {\r\n            if (isUndef(val)) {\r\n                const f = firstNode(this);\r\n                if (f && f.getAttribute) {\r\n                    return f.getAttribute(name);\r\n                }\r\n                return null;\r\n            }\r\n            else {\r\n                loop(this.nodes, n => n && n.setAttribute && n.setAttribute(name, val));\r\n                return this;\r\n            }\r\n        },\r\n        removeAttr: function (name) {\r\n            loop(this.nodes, n => n.removeAttribute(name));\r\n            return this;\r\n        },\r\n        css: function (prop, val) {\r\n            let objval;\r\n\r\n            const setStyle = (n, prop, val) => {\r\n                prop = prop.toLowerCase();\r\n                const nrprops = [\"left\", \"top\", \"right\", \"bottom\", \"width\", \"height\"];\r\n\r\n                if (nrprops.some(w => prop.endsWith(w))) {\r\n                    if (typeof val === 'number') {\r\n                        val = `${val}px`;\r\n                    }\r\n                }\r\n\r\n                n.style[prop] = val;\r\n            }\r\n\r\n            if (typeof prop === 'object') {\r\n                objval = prop;\r\n            }\r\n\r\n            if (len(arguments) === 1 && !objval) {\r\n                const f = firstNode(this)\r\n                if (f) {\r\n                    return window.getComputedStyle(f)[prop];\r\n                }\r\n            }\r\n            else {\r\n                loop(this.nodes, n => {\r\n                    if (objval) {\r\n                        loop(Object.entries(objval), ([k, v]) => { setStyle(n, k, v); });\r\n                    }\r\n                    else {\r\n                        setStyle(n, prop, val);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n        outerHeight: function (p1, p2, { horiz } = {}) {\r\n            let includeMargin, valToSet;\r\n\r\n            if (!isNull(p1)) {\r\n                if (isBool(p1)) {\r\n                    includeMargin = p1;\r\n                }\r\n                else {\r\n                    valToSet = p1;\r\n                    includeMargin = p2;\r\n                }\r\n            }\r\n\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                const prop = horiz ? 'Width' : 'Height';\r\n                const outer = includeMargin ? 2 : 1;\r\n\r\n                if (valToSet) {\r\n                    // remove space from valToSet                    \r\n                    return this.height(valToSet, { outer, horiz });\r\n                }\r\n\r\n                if (f == window) return window[`outer${prop}`];\r\n                if (f == document) return f.documentElement[`scroll${prop}`];\r\n                if (!isVisible(f)) return 0;\r\n\r\n                return getDimForElm(f, { outer, horiz });\r\n            }\r\n        },\r\n        outerWidth: function (includeMargin, arg2,) {\r\n            return this.outerHeight(includeMargin, arg2, { horiz: 1 });\r\n        },\r\n        height: function (val, { outer, horiz = 0 } = {}) {\r\n            const f = firstNode(this),\r\n                isGet = isUndef(val);\r\n\r\n            if (f) {\r\n                if (isGet) {\r\n                    if (f == window)\r\n                        return document.documentElement[horiz ? 'clientWidth' : 'clientHeight'];\r\n\r\n                    if (f == document)\r\n                        return f.documentElement[horiz ? 'scrollWidth' : 'scrollHeight'];\r\n                    if (!isVisible(f)) return 0;\r\n                }\r\n\r\n                if (isGet) {\r\n                    return getDimForElm(f, { content: 1, bord: 1, horiz });\r\n                }\r\n\r\n                let borderAndPad = getDimForElm(f, { bord: 1, horiz })\r\n\r\n                if (outer) {\r\n                    //set outerHeight(val)\r\n                    borderAndPad = 0;\r\n                }\r\n\r\n                let valToSet = val - borderAndPad;\r\n                this.css(horiz ? 'width' : 'height', valToSet);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        width: function (val) {\r\n            return this.height(val, { horiz: 1 });\r\n        },\r\n        hide: function () {\r\n            loop(this.nodes, n => hide(n));\r\n\r\n            return this;\r\n        },\r\n        show: function () {\r\n            loop(this.nodes, n => show(n));\r\n\r\n            return reflow(this);\r\n        },\r\n        fadeOut: function (duration = 400, callback) {\r\n            loop(this.nodes, n => {\r\n                n.style.transition = `opacity ${duration}ms`;\r\n                n.style.opacity = 0;\r\n                setTimeout(() => {\r\n                    hide(n);\r\n                    if (callback) { callback.call(n); }\r\n                }, duration);\r\n            });\r\n\r\n            return this;\r\n        },\r\n        scrollTop: function (val, { left } = {}) {\r\n            //const wprop = left ? 'scrollX' : 'scrollY';\r\n            const prop = left ? 'scrollLeft' : 'scrollTop';\r\n            function getNodeAndProp(f) {\r\n                if (f == document || f == window) return [document.documentElement, prop];\r\n                //if (f == window) return [f, wprop];\r\n                return [f, prop];\r\n            }\r\n\r\n            if (isUndef(val)) {\r\n                const f = firstNode(this);\r\n                if (f) {\r\n                    const [node, prop] = getNodeAndProp(f);\r\n                    return node[prop];\r\n                }\r\n            }\r\n            else {\r\n                loop(this.nodes, n => {\r\n                    const [node, prop] = getNodeAndProp(n);\r\n                    node[prop] = val;\r\n\r\n                    //if (n === window) {\r\n                    //    n.scrollTo(window[wprop], val);\r\n                    //}\r\n                    //else {\r\n                    //    n[prop] = val;\r\n                    //}\r\n                });\r\n\r\n                return this;\r\n            }\r\n        },\r\n        scrollLeft: function (val) {\r\n            return this.scrollTop(val, { left: 1 });\r\n        },\r\n        position: function () {\r\n            const elm = firstNode(this);\r\n            const rect = elm.getBoundingClientRect();\r\n            const ofsPrnt = elm.offsetParent;\r\n\r\n            if (!ofsPrnt) {\r\n                return { left: rect.left, top: rect.top };\r\n            }\r\n\r\n            const offsetParentRect = ofsPrnt.getBoundingClientRect();\r\n            const lbordW = parseFloat(getComputedStyle(ofsPrnt).borderLeftWidth) || 0;\r\n\r\n            return {\r\n                top: rect.top - offsetParentRect.top + elm.offsetParent.scrollTop,\r\n                left: rect.left - offsetParentRect.left + elm.offsetParent.scrollLeft - lbordW\r\n            };\r\n        },\r\n        offset: function () {\r\n            const elm = firstNode(this);\r\n            const rect = elm.getBoundingClientRect();\r\n\r\n            return {\r\n                top: rect.top + window.scrollY,\r\n                left: rect.left + window.scrollX\r\n            }\r\n        },\r\n        remove: function () {\r\n            loop(this.nodes, n => remNode(n));\r\n            return this;\r\n        },\r\n        detach: function () {\r\n            loop(this.nodes, n => remNode(n, 1));\r\n            return this;\r\n        },\r\n        is: function (arg) {\r\n            if (isStr(arg)) {\r\n                return this.nodes?.some(n => isSelector(n, arg));\r\n            } else if (isAquery(arg)) {\r\n                return this.nodes?.some(n => arg.nodes.includes(n))\r\n            } else {\r\n                return this.nodes?.some(n => arg === n);\r\n            }\r\n\r\n            return;\r\n        },\r\n        addClass: function (name) {\r\n            loop(this.nodes, n => addClasses(n, name));\r\n            return this;\r\n        },\r\n        removeClass: function (name) {\r\n            loop(this.nodes, n => remClasses(n, name));\r\n            return this;\r\n        },\r\n        toggleClass: function (cssClasses) {\r\n            loop(this.nodes, n => toggleClasses(n, cssClasses));\r\n            return this;\r\n        },\r\n        hasClass: function (name) {\r\n            return this.nodes?.some(n => n.classList?.contains(name));\r\n        },\r\n        on: function (events, filter, handler, opt) {\r\n            let [eventsArrPrm, filterPrm, handlerPrm] = getEvParam(events, filter, handler);\r\n            filterPrm = simpleSelectorParse(filterPrm);\r\n\r\n            loop(this.nodes, node => {\r\n                eventsArrPrm.forEach(function ([ev, ns]) {\r\n                    let aweEvs = node.aweEvs || {};\r\n                    let evBindings = aweEvs[ev];\r\n\r\n                    if (isNull(evBindings)) {\r\n                        node.addEventListener(ev, wrapHandler);\r\n                        aweEvs[ev] = evBindings = new Set();\r\n                    }\r\n\r\n                    evBindings.add({ filter: filterPrm, handler: handlerPrm, ns, one: opt?.one });\r\n                    node.aweEvs = aweEvs;\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n        one: function (events, filter, handler) {\r\n            return this.on(events, filter, handler, { one: 1 });\r\n        },\r\n        off: function (events, filter, handler) {\r\n            let [eventsArrPrm, filterPrm, handlerPrm] = getEvParam(events, filter, handler);\r\n            filterPrm = simpleSelectorParse(filterPrm);\r\n\r\n            function match(b, flt1, handler1, ns) {\r\n                let res = 1;\r\n\r\n                if (flt1) {\r\n                    res = res && flt1 === b.filter;\r\n                }\r\n\r\n                if (handler1) {\r\n                    res = res && handler1 === b.handler;\r\n                }\r\n\r\n                if (ns) {\r\n                    res = res && ns === b.ns;\r\n                }\r\n\r\n                return res;\r\n            }\r\n\r\n            loop(this.nodes, node => {\r\n                for (const [evType, ns] of eventsArrPrm) {\r\n                    const aweEvs = node.aweEvs || {};\r\n                    const bindings = aweEvs[evType];\r\n\r\n                    if (!bindings) continue;\r\n\r\n                    let toRemove = Array.from(bindings).filter(b => match(b, filterPrm, handlerPrm, ns));\r\n\r\n                    if (len(toRemove)) {\r\n                        toRemove.forEach(b => bindings.delete(b));\r\n                    }\r\n\r\n                    if (!bindings.size) {\r\n                        node.removeEventListener(evType, wrapHandler);\r\n                        aweEvs[evType] = null;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        setNodes: function (arg) {\r\n\r\n            let nodes = this.nodes;\r\n\r\n            if (arg === window || arg === document) {\r\n                nodes = [arg]\r\n            }\r\n            else if (arg instanceof NodeList || arg instanceof Array) {\r\n                nodes = [...arg]\r\n            }\r\n            else if (arg instanceof Node) {\r\n                nodes = [arg];\r\n            }\r\n            else if (isAquery(arg)) {\r\n                nodes = arg.nodes;\r\n            }\r\n            else if (isStr(arg)) {\r\n                nodes = customSelector([document], arg);\r\n            }\r\n            else {\r\n                nodes = null;\r\n            }\r\n\r\n            this.nodes = nodes;\r\n\r\n            recalcAqArr(this);\r\n\r\n            return this;\r\n        },\r\n        add: function (arg) {\r\n            if (isAquery(arg)) {\r\n                const nodes = new Set(this.nodes);\r\n                arg.nodes.forEach(n => nodes.add(n));\r\n                this.nodes = [...nodes];\r\n                recalcAqArr(this);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        not: function (arg) {\r\n            let toRemoveNodes;\r\n            if (isStr(arg)) {\r\n                toRemoveNodes = customSelector(this.nodes, arg, { useFilter: 1 });\r\n            }\r\n            else {\r\n                toRemoveNodes = Array.from(arg);\r\n            }\r\n\r\n            return aquery(this.nodes.filter(n => !toRemoveNodes.includes(n)));\r\n        },\r\n        clone: function () {\r\n            return aquery(select(this.nodes, n => n.cloneNode(true)));\r\n        },\r\n        append: function (arg) {\r\n            //const f = firstNode(this);\r\n\r\n            function add(node, prm) {\r\n                if (Array.isArray(prm)) {\r\n                    loop(prm, itm => add(node, itm));\r\n                }\r\n                else if (isAquery(prm)) {\r\n                    loop(prm.nodes, n => node.appendChild(n));\r\n                }\r\n                else if (prm instanceof Node) {\r\n                    node.appendChild(prm);\r\n                }\r\n                else {\r\n                    appendFragment(node, prm);\r\n                }\r\n            }\r\n\r\n            loop(this.nodes, n => add(n, arg));\r\n\r\n            return reflow(this);\r\n        },\r\n        appendTo: function (arg) {\r\n            aquery(arg).append(this);\r\n            return this;\r\n        },\r\n        prependTo: function (arg) {\r\n            aquery(arg).prepend(this);\r\n            return this;\r\n        },\r\n        prepend: function (arg) {\r\n            loop(this.nodes, n => {\r\n                if (isStr(arg)) {\r\n                    n.insertAdjacentHTML('afterbegin', arg);\r\n                }\r\n                else if (isAquery(arg)) {\r\n                    n.prepend(arg.nodes[0]);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        before: function (arg) {\r\n\r\n            function add(n, prmToAdd) {\r\n                if (Array.isArray(prmToAdd)) {\r\n                    loop(prmToAdd, itm => add(n, itm));\r\n                }\r\n                else if (isAquery(prmToAdd)) {\r\n                    loop(prmToAdd.nodes, node => add(n, node));\r\n                }\r\n                else if (prmToAdd instanceof Node) {\r\n                    //applyScriptsForNode(prmToAdd);\r\n                    n.parentNode.insertBefore(prmToAdd, n);\r\n                }\r\n                else if (isStr(prmToAdd)) {\r\n                    appendFragment(n, prmToAdd, { before: 1 })\r\n                }\r\n                else {\r\n                    // int, other\r\n                    appendFragment(n, String(prmToAdd), { before: 1 })\r\n                }\r\n            }\r\n\r\n            loop(this.nodes, n => add(n, arg));\r\n\r\n            return this;\r\n        },\r\n        after: function (arg) {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                if (isStr(arg)) {\r\n                    f.insertAdjacentHTML('afterend', arg);\r\n                }\r\n                else if (isAquery(arg)) {\r\n                    const next = f.nextElementSibling;\r\n                    if (next) {\r\n                        next.parentNode.insertBefore(arg.nodes[0], next);\r\n                    } else {\r\n                        f.parentNode?.appendChild(arg.nodes[0]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        html: function (arg) {\r\n            const f = firstNode(this);\r\n            if (f && !len(arguments)) {\r\n                return f.innerHTML;\r\n            }\r\n            else {\r\n                loop(this.nodes, n => {\r\n                    if (!isObject(arg)) {\r\n                        setHTMLWithScripts(n, arg);\r\n                    }\r\n                    else {\r\n                        aquery(n).append(arg);\r\n                    }\r\n                });\r\n\r\n                return this;\r\n            }\r\n        },\r\n        focus: function () {\r\n            const f = firstNode(this);\r\n            if (f && f.focus) {\r\n                f.focus();\r\n            }\r\n            return this;\r\n        },\r\n        empty: function () {\r\n            loop(this.nodes, n => n.innerHTML = '')\r\n            return this;\r\n        },\r\n        val: function (arg) {\r\n            if (len(arguments)) {\r\n                arg = isNull(arg) ? '' : arg;\r\n\r\n                loop(this.nodes, n => {\r\n                    n.value = arg;\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            const f = firstNode(this);\r\n            return f?.value;\r\n        },\r\n        prop: function (name, val) {\r\n            const f = firstNode(this);\r\n            if (name == 'class') {\r\n                name = 'className';\r\n            }\r\n\r\n            if (f && len(arguments) == 1) {\r\n                return f[name];\r\n            }\r\n\r\n            loop(this.nodes, n => {\r\n                n[name] = val;\r\n            });\r\n\r\n            return this;\r\n        },\r\n        trigger: function (name, data) {\r\n            loop(this.nodes, n => trigger(n, name, data));\r\n            return this;\r\n        },\r\n        serializeArray: function () {\r\n            let res = [];\r\n            let inputs = new Set();\r\n\r\n            loop(this.nodes, n => {\r\n                if (isForm(n)) {\r\n                    [...n.elements].forEach(c => inputs.add(c));\r\n                }\r\n                else {\r\n                    inputs.add(n);\r\n                }\r\n            });\r\n\r\n            loop([...inputs], serializeInput);\r\n\r\n            function serializeInput(n) {\r\n                let name = attr(n, 'name');\r\n                if (!n.disabled && name && (!['checkbox', 'radio'].includes(n.type) || n.checked)) {\r\n                    res.push({ name: name, value: n.value });\r\n                }\r\n            }\r\n\r\n            return res;\r\n        },\r\n        index: function (arg) {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                if (arg) {\r\n                    // element or aquery\r\n                    if (isAquery(arg)) {\r\n                        arg = firstNode(arg);\r\n                    }\r\n\r\n                    return Array.prototype.indexOf.call(this.nodes, arg);\r\n                }\r\n\r\n                if (!f.parentNode) {\r\n                    return Array.prototype.indexOf.call(this.nodes, f);\r\n                }\r\n\r\n                return Array.prototype.indexOf.call(f.parentNode.children, f);\r\n            }\r\n        },\r\n        eq: function (i) {\r\n            if (len(this.nodes) > i) {\r\n                return aquery(this.nodes[i]);\r\n            }\r\n\r\n            return aquery();\r\n        },\r\n        prev: function () {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                return aquery(f.previousElementSibling);\r\n            }\r\n            return this;\r\n        },\r\n        next: function () {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                return aquery(f.nextElementSibling);\r\n            }\r\n            return this;\r\n        },\r\n        parent: function () {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                return aquery(f.parentNode);\r\n            }\r\n\r\n            return null;\r\n        },\r\n        nextAll: function (selector, { prev } = {}) {\r\n            let res = new Set();\r\n            let prop = prev ? 'previousElementSibling' : 'nextElementSibling';\r\n\r\n            loop(this.nodes, n => {\r\n                let next = n[prop];\r\n\r\n                while (next) {\r\n                    res.add(next);\r\n                    next = next[prop];\r\n                }\r\n            });\r\n\r\n            res = Array.from(res);\r\n\r\n            if (selector) {\r\n                res = res.filter(sibling => sibling.matches(selector));\r\n            }\r\n\r\n            return aquery(res);\r\n        },\r\n        prevAll: function (selector) {\r\n            return this.nextAll(selector, { prev: 1 });\r\n        },\r\n        map: function (func) {\r\n            this.setNodes(select(this.nodes, (n, i) => func.call(n, i, n)));\r\n            return this;\r\n        },\r\n        bind: function (event, handler) {\r\n            return this.on(event, handler);\r\n        }\r\n    };\r\n\r\n    aquery.fn.init.prototype = aquery.fn;\r\n\r\n    ['click', 'change', 'keydown', 'keyup', 'mousedown', 'mouseup', 'submit', 'dblclick'].forEach(type => aquery.fn[type] = getEventFunc(type));\r\n\r\n    function getEventFunc(name) {\r\n        return function (handler) {\r\n            if (!len(arguments)) {\r\n                return this.trigger(name);\r\n            }\r\n\r\n            return this.on(name, handler);\r\n        }\r\n    }\r\n\r\n    function isNull(val) {\r\n        return val === undefined || val === null;\r\n    }\r\n\r\n    function isBool(val) {\r\n        return val === true || val === false;\r\n    }\r\n\r\n    function loop(arr, f) {\r\n        if (arr) {\r\n            for (let i = 0, ln = len(arr); i < ln; i++) {\r\n                let col = arr[i];\r\n                if (f(col, i) === false) {\r\n                    break;\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    function select(list, func) {\r\n        let res = [];\r\n        loop(list, function (el, i) {\r\n            res.push(func(el, i));\r\n        });\r\n\r\n        return res;\r\n    }\r\n\r\n    function len(o) {\r\n        return !o ? 0 : o.length;\r\n    }\r\n\r\n    function isNullOrEmp(val) {\r\n        return isNull(val) || len(val.toString()) === 0;\r\n    }\r\n\r\n    function replaceAll(str, search, replacement) {\r\n        return str.split(search).join(replacement ?? '');\r\n    }\r\n\r\n    function trigger(elm, ename, data) {\r\n        if (len(elm) && elm?.tagName !== 'FORM') {\r\n            elm = elm[0];\r\n        }\r\n\r\n        if (elm) {\r\n            const ev = typeof ename === 'object' ? ename : aq.Event(ename);\r\n\r\n            ev.aweData = data;\r\n            elm.dispatchEvent(ev);\r\n\r\n            if (!ev.defaultPrevented) {\r\n                if (ename === 'focus') {\r\n                    elm.focus && elm.focus();\r\n                }\r\n\r\n                if (ename === 'submit') {\r\n                    elm.submit && elm.submit();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function serlObj(jobj) {\r\n        let res = [];\r\n\r\n        for (let key in jobj) {\r\n            if (!Array.isArray(jobj[key]))\r\n                res.push({ name: key, value: jobj[key] });\r\n            else res = res.concat(awef.serlArr(jobj[key], key));\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    function isVisible(element) {\r\n        if (!element || !element.isConnected) return false;\r\n\r\n        let current = element;\r\n        while (current) {\r\n            const style = window.getComputedStyle(current);\r\n            if (style.display === 'none') return false;\r\n            current = current.parentElement;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function addAttrValQuotes(str) {\r\n        return str.replace(/\\[([^=]+)=(['\"]?)([^\\]]*?)\\2\\]/g, (match, attr, quote, val) => {\r\n            if (!quote) { // Only add quotes if they are not already present\r\n                return `[${attr}=\"${val}\"]`;\r\n            }\r\n\r\n            return match; // Return the original match if quotes are already present\r\n        });\r\n    }\r\n\r\n    function hide(n) {\r\n        let d = n.style.display;\r\n        if (d == 'none') return;\r\n        displayWeakMap.set(n, d);\r\n        n.style.display = 'none';\r\n    }\r\n\r\n    function show(n) {\r\n        let dval = displayWeakMap.get(n) || '';\r\n        n.style.display = dval;\r\n\r\n        let styles = getComputedStyle(n);\r\n\r\n        if (styles.display === 'none') {\r\n            const tagVisMap = {\r\n                TR: 'table-row'\r\n            };\r\n\r\n            dval = tagVisMap[n.tagName] || 'block';\r\n\r\n            n.style.display = dval;\r\n        }\r\n    }\r\n\r\n    // won't split by commas inside [,]\r\n    function splitSelectorByCommas(selector) {\r\n        const parts = [];\r\n        let currentPart = \"\";\r\n        let inAttributeSelector = false;\r\n\r\n        for (let i = 0; i < selector.length; i++) {\r\n            const char = selector[i];\r\n\r\n            if (char === \"[\") {\r\n                inAttributeSelector = true;\r\n            } else if (char === \"]\") {\r\n                inAttributeSelector = false;\r\n            } else if (char === \",\" && !inAttributeSelector) {\r\n                parts.push(currentPart.trim());\r\n                currentPart = \"\";\r\n                continue; // Skip the comma\r\n            }\r\n\r\n            currentPart += char;\r\n        }\r\n\r\n        currentPart.trim() && parts.push(currentPart.trim()); // Add the last part\r\n\r\n        return parts;\r\n    }\r\n\r\n    function customSelector(startNodes, selector, { useFilter } = {}) {\r\n        const regex = /(:hidden|:visible|:eq\\(\\d+\\)|:first|:last|:input)/;\r\n        if (isNullOrEmp(selector) || !startNodes) return startNodes;\r\n\r\n        // escape id starting with number (not allowed in querySelectorAll)\r\n        if (/^#[0-9]/.test(selector)) {\r\n            selector = `#${CSS.escape(selector.substring(1))}`;\r\n        }\r\n\r\n        // :checkbox :radio\r\n        selector = simpleSelectorParse(selector);\r\n\r\n        if (!regex.test(selector)) {\r\n            return query(startNodes, selector);\r\n        }\r\n\r\n        function query(nodes, sel, mustUseFilter) {\r\n            return useFilter || mustUseFilter ? nodes.filter(n => n.matches(sel)) :\r\n                nodes.flatMap(n => Array.from(n.querySelectorAll(sel)));\r\n        }\r\n\r\n        const results = new Set();\r\n        const byCommaParts = splitSelectorByCommas(selector).filter(Boolean);\r\n\r\n        for (const commaPart of byCommaParts) {\r\n            let cnodes = startNodes;\r\n\r\n            const bySpaceParts = commaPart.split(' ').filter(Boolean);\r\n\r\n            for (const spacePart of bySpaceParts) {\r\n                const keywparts = spacePart.trim().split(regex).filter(Boolean).map(s => s.trim()).filter(Boolean);\r\n\r\n                keywparts.forEach((wpart, index) => {\r\n                    let nlen = len(cnodes);\r\n\r\n                    if (!nlen) return false;\r\n                    if (wpart === \":visible\") {\r\n                        cnodes = cnodes.filter(isVisible);\r\n                    }\r\n                    else if (wpart === \":hidden\") {\r\n                        cnodes = cnodes.filter(n => !isVisible(n));\r\n                    }\r\n                    else if (wpart.startsWith(\":eq(\")) {\r\n                        const i = parseInt(wpart.slice(4, -1));\r\n                        if (i >= 0 && i < nlen) {\r\n                            cnodes = [cnodes[i]];\r\n                        } else {\r\n                            cnodes = [];\r\n                        }\r\n                    } else if (wpart === \":first\") {\r\n                        cnodes = nlen > 0 ? [cnodes[0]] : [];\r\n                    } else if (wpart === \":last\") {\r\n                        cnodes = nlen > 0 ? [cnodes[nlen - 1]] : [];\r\n                    }\r\n                    else if (wpart === \":input\") {\r\n                        cnodes = query(cnodes, 'input, select, textarea, button');\r\n                    }\r\n                    else {\r\n                        cnodes = query(cnodes, wpart, !!index); // use filter after i = 0\r\n                    }\r\n                });\r\n\r\n                // rem duplicates\r\n                // cnodes.forEach(node => results.add(node));\r\n            }\r\n\r\n            // rem duplicates\r\n            cnodes.forEach(node => results.add(node));\r\n        }\r\n\r\n        let res = Array.from(results);\r\n\r\n        if (!useFilter) {\r\n            res = res.sort((a, b) => {\r\n                if (a === b) return 0;\r\n                if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_PRECEDING) {\r\n                    return 1;\r\n                }\r\n                return -1;\r\n            });\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    function setHTMLWithScripts(node, html) {\r\n        node.innerHTML = html;\r\n        applyScriptsForNode(node);\r\n    }\r\n\r\n    function strToNode(arg) {\r\n        const tempContainer = document.createElement(arg.startsWith('<tr') ? 'tbody' : 'div');\r\n        tempContainer.innerHTML = arg;\r\n        return [...tempContainer.childNodes];\r\n    }\r\n\r\n    function appendFragment(node, arg, { before } = {}) {\r\n        if (!node) return;\r\n        let isTr;\r\n\r\n        if (isStr(arg) && arg.trim().startsWith('<tr')) {\r\n            isTr = 1;\r\n            arg = `<table><tbody>${arg}</tbody></table>`;\r\n        }\r\n\r\n        const range = document.createRange();\r\n        range.selectNode(document.body);\r\n        const frg = range.createContextualFragment(arg);\r\n\r\n        if (!isTr) {\r\n            if (before) {\r\n                node.parentNode.insertBefore(frg, node);\r\n            }\r\n            else {\r\n                node.appendChild(frg);\r\n            }\r\n\r\n            //applyScriptsForNode(frg);\r\n        }\r\n        else {\r\n            const rows = Array.from(frg.childNodes[0].childNodes[0].childNodes);\r\n\r\n            if (before) {\r\n                loop(rows, newNode => node.parentNode.insertBefore(newNode, node));\r\n            }\r\n            else {\r\n                loop(rows, r => node.appendChild(r));\r\n            }\r\n\r\n            //loop(rows, applyScriptsForNode);\r\n        }\r\n\r\n        // appendChild and insertBefore executes present scripts\r\n    }\r\n\r\n    function applyScriptsForNode(node) {\r\n        const scripts = node.querySelectorAll('script');\r\n        scripts.forEach((script) => {\r\n            const newScript = document.createElement('script');\r\n            newScript.textContent = script.textContent;\r\n\r\n            Array.from(script.attributes).forEach(attr => { newScript.setAttribute(attr.name, attr.value); });\r\n\r\n            script.parentNode.replaceChild(newScript, script);\r\n        });\r\n    }\r\n\r\n    function simpleSelectorParse(sel) {\r\n        if (!sel) return sel;\r\n        let res = replaceAll(sel, ':checkbox', '[type=\"checkbox\"]');\r\n        res = replaceAll(res, ':radio', '[type=\"radio\"]');\r\n        res = addAttrValQuotes(res);\r\n        return res;\r\n    }\r\n\r\n    function getEvParam(events, filter, handler) {\r\n        const eventsArr = events.split(' ')\r\n            .filter(Boolean)\r\n            .map(evname => {\r\n                let parts = evname.split('.');\r\n                return [parts[0], parts.slice(1).join('.')];\r\n            });\r\n\r\n        if (isFunc(filter)) {\r\n            handler = filter;\r\n            filter = null;\r\n        }\r\n\r\n        return [eventsArr, filter, handler];\r\n    }\r\n\r\n    function firstNode(aqObj) {\r\n        if (len(aqObj?.nodes)) {\r\n            return aqObj.nodes[0];\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, val) {\r\n        if (elm == window || elm == document) return;\r\n        if (isUndef(val)) {\r\n            return elm.getAttribute(name);\r\n        }\r\n        else {\r\n            return elm.setAttribute(name, val);\r\n        }\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        if (!isObject(obj)) return false;\r\n\r\n        const proto = Object.getPrototypeOf(obj);\r\n        return isNull(proto) || proto === Object.prototype;\r\n    }\r\n\r\n    function extend() {\r\n        let target = arguments[0] || {};\r\n\r\n        // Handle case when target is a string or something (possible in deep copy)\r\n        if (!isObject(target) && !isFunc(target)) {\r\n            target = {};\r\n        }\r\n\r\n        for (let i = 1; i < len(arguments); i++) {\r\n            let options = arguments[i];\r\n\r\n            // Only deal with non-null/undefined values\r\n            if (options != null) {\r\n\r\n                // Extend the base object\r\n                for (let name in options) {\r\n                    let src = target[name];\r\n                    let copy = options[name];\r\n\r\n                    // Prevent never-ending loop\r\n                    if (target === copy) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Recurse if we're merging plain objects or arrays\r\n                    if (copy && (isPlainObject(copy) || Array.isArray(copy))) {\r\n\r\n                        let clone = src && (isPlainObject(src) || Array.isArray(src)) ? src : Array.isArray(copy) ? [] : {};\r\n\r\n                        // Never move original objects, clone them\r\n                        target[name] = extend(clone, copy);\r\n\r\n                        // Don't bring in undefined values\r\n                    } else if (copy !== undefined) {\r\n                        target[name] = copy;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Return the modified object\r\n        return target;\r\n    }\r\n\r\n    function isForm(element) {\r\n        return element && (element.nodeName === 'FORM' || element.tagName === 'FORM');\r\n    }\r\n\r\n    function getTopMostParent(elm) {\r\n        if (elm.parentNode) return getTopMostParent(elm.parentNode);\r\n        return elm;\r\n    }\r\n\r\n    // get padding for element\r\n    // horiz - horizontal padding/border widths\r\n    // content - include content\r\n    // outer = (1 - outerHeight 2 - outerHeight(true) )\r\n    // bord - include border size\r\n    function getDimForElm(node, { horiz, bord, content, outer } = {}) {\r\n        let dimres = 0;\r\n\r\n        function stylesCalc(elm) {\r\n            const horizf = name => name.replace('Top', 'Left').replace('Bottom', 'Right');\r\n\r\n            let mprop = 'height';\r\n            let names = ['paddingTop', 'paddingBottom'];\r\n            let bordNames = ['borderTopWidth', 'borderBottomWidth'];\r\n            let margins = ['marginTop', 'marginBottom'];\r\n\r\n            if (horiz) {\r\n                mprop = 'width';\r\n                names = names.map(horizf);\r\n                margins = margins.map(horizf);\r\n            }\r\n\r\n            const styles = getComputedStyle(elm);\r\n\r\n            const nParseFloat = (sval) => {\r\n                let res = parseFloat(sval);\r\n\r\n                // when width = 'auto'\r\n                if (isNaN(res)) {\r\n                    res = 0;\r\n                }\r\n\r\n                return res;\r\n            };\r\n\r\n            const sumStyles = snames => snames.reduce((prev, curr) => nParseFloat(styles[curr]) + prev, 0)\r\n\r\n            if (outer) {\r\n                let res = nParseFloat(styles[mprop]);\r\n\r\n                if (outer == 2) {\r\n                    res += sumStyles(margins);\r\n                }\r\n\r\n                // outerHeight/Width\r\n                return res;\r\n            }\r\n\r\n            // add border width\r\n            if (bord) {\r\n                names = [...names, ...bordNames];\r\n            }\r\n\r\n            // padding + border\r\n            let res = sumStyles(names);\r\n\r\n            if (styles.boxSizing == 'border-box') {\r\n                res = -res;\r\n            }\r\n\r\n            // content height/width\r\n            if (content) {\r\n                return parseFloat(styles[mprop]) + res;\r\n            }\r\n\r\n            return res;\r\n        }\r\n\r\n        let parent = getTopMostParent(node);\r\n\r\n        if (parent != document) {\r\n            // calling getComputedStyle(f) while f is not in document would break css transitions on f\r\n            const tempParent = document.createElement(\"div\");\r\n            tempParent.style.cssText = \"position: absolute; visibility: hidden; display: block;\"; // Hide it from view\r\n\r\n            document.body.appendChild(tempParent); // Temporarily append\r\n\r\n            tempParent.appendChild(parent);\r\n\r\n            dimres = stylesCalc(node);\r\n\r\n            tempParent.parentNode.removeChild(tempParent); // Remove it\r\n        }\r\n        else {\r\n            dimres = stylesCalc(node);\r\n        }\r\n\r\n        return dimres;\r\n    }\r\n\r\n    function wrapHandler(event) {\r\n        let data = event?.aweData;\r\n        data = Array.isArray(data) ? data : [data];\r\n\r\n        const type = event.type;\r\n        let bindings = Array.from(this.aweEvs[type]);\r\n\r\n        if (event.namespace) {\r\n            bindings = bindings.filter(b => b.ns == event.namespace);\r\n        }\r\n\r\n        // order bindings based on target and filter\r\n        const rankedBindings = bindings\r\n            .reduce((acc, b) => {\r\n                if (b.filter) {\r\n                    let res = closestRanked(event.target, b.filter);\r\n                    res && acc.push({ b: b, node: res[0], rank: res[1] });\r\n                }\r\n                return acc;\r\n            }, [])\r\n            .sort((x, y) => x.rank - y.rank)\r\n            .concat(\r\n                bindings\r\n                    .filter(b => !b.filter)\r\n                    .map(b => ({ b }))\r\n            );\r\n\r\n        let immediatePropagationStopped = false;\r\n        const orig = event.stopImmediatePropagation;\r\n        if (orig) {\r\n            event.stopImmediatePropagation = function () {\r\n                immediatePropagationStopped = true;\r\n                orig.call(event);\r\n            };\r\n        }\r\n\r\n        event.originalEvent = event;\r\n\r\n        for (const rb of rankedBindings) {\r\n            const res = rb.b.handler.call(rb.node || this, event, ...data);\r\n\r\n            if (rb.b.one) {\r\n                this.aweEvs[type].delete(rb.b);\r\n            }\r\n\r\n            if (immediatePropagationStopped || res === false) {\r\n                if (res === false) {\r\n                    event.stopPropagation();\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}(window.jQuery));"],"names":["$","aq","arg","arg2","dataWeakMap","displayWeakMap","isUndef","o","isStr","isFunc","isAquery","isObject","obj","isNull","toLoadOnReady","ready","onDocReady","func","loop","f","addClasses","elm","name","remClasses","toggleClasses","element","classes","cls","a","b","nargs","extend","len","isAdeferred","p","adeferred","mergeErrIntoAdeferred","err","adf","_a","allprom","prom","then","success","failure","self","sres","failureFunc","arg1","res","ares","pairedResults","result","i","thennable","status","alwaysArgs","exec","url","options","opt2","url1","data","traditional","error","dataType","contentType","xhrFields","method","serializeData","serlObj","item","fetchOptions","queryString","promise","xhr","response","text","scriptElement","key","value","urlOrOpt","val","arr","array","callback","index","it","ix","type","namespace","initDict","init","ev","isSelector","node","selector","isNullOrEmp","customSelector","closestRanked","closestRankRed","rank","closestSelector","recalcAqArr","aqthis","n","remNode","detach","reflow","firstNode","strToNode","str","wrapperNode","wrap","rbrace","elmData","nodes","l","filterStr","prev","nxprop","nx","isAncestor","current","nodeWeLookFor","argNode","prop","objval","setStyle","w","k","v","p1","p2","horiz","includeMargin","valToSet","isBool","outer","isVisible","getDimForElm","isGet","borderAndPad","hide","show","duration","left","getNodeAndProp","rect","ofsPrnt","offsetParentRect","lbordW","_b","_c","cssClasses","events","filter","handler","opt","eventsArrPrm","filterPrm","handlerPrm","getEvParam","simpleSelectorParse","ns","aweEvs","evBindings","wrapHandler","match","flt1","handler1","evType","bindings","toRemove","toRemoveNodes","select","add","prm","itm","appendFragment","prmToAdd","next","setHTMLWithScripts","trigger","inputs","isForm","c","serializeInput","attr","sibling","event","getEventFunc","ln","col","list","el","replaceAll","search","replacement","ename","jobj","addAttrValQuotes","quote","d","dval","splitSelectorByCommas","parts","currentPart","inAttributeSelector","char","startNodes","useFilter","regex","query","sel","mustUseFilter","results","byCommaParts","commaPart","cnodes","bySpaceParts","spacePart","s","wpart","nlen","html","applyScriptsForNode","tempContainer","before","isTr","range","frg","rows","newNode","r","script","newScript","eventsArr","evname","aqObj","isPlainObject","proto","target","src","copy","clone","getTopMostParent","bord","content","dimres","stylesCalc","horizf","mprop","names","bordNames","margins","styles","nParseFloat","sval","sumStyles","snames","curr","parent","tempParent","rankedBindings","acc","x","y","immediatePropagationStopped","orig","rb"],"mappings":"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"}