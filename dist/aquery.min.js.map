{"version":3,"file":"aquery.min.js","sources":["../src/aquery.js"],"sourcesContent":["// aquery\r\n(function ($) {\r\n    const aq = aquery = function (arg, arg2) {\r\n        return new aquery.fn.init(arg, arg2);\r\n    };\r\n\r\n    const dataWeakMap = new WeakMap();\r\n    const displayWeakMap = new WeakMap();\r\n\r\n    const isUndef = o => o === undefined;\r\n    const isStr = (arg) => typeof arg === 'string';\r\n    const isFunc = (arg) => typeof arg === 'function';\r\n    const isAquery = (arg) => arg instanceof aquery && arg?.nodes;\r\n    const isObject = (obj) => typeof obj === 'object' && !isNull(obj);\r\n\r\n    if (isUndef($)) {\r\n        jQuery = $ = window.$ = window.jQuery = window.aquery = aquery;\r\n    }\r\n\r\n    const toLoadOnReady = [];\r\n    let ready = false;\r\n    const onDocReady = func => {\r\n        if (ready) {\r\n            // timeout to let inline scripts execute before doc.ready\r\n            setTimeout(func);\r\n        }\r\n        else {\r\n            toLoadOnReady.push(func);\r\n        }\r\n    };\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        ready = true;\r\n        // Using setTimeout to delay function execution.\r\n        // If f starts a Promise.all([plain value]).then(f1), f1 will execute before the next iteration of loop due to Promise microtask queue processing.\r\n        loop(toLoadOnReady, f => setTimeout(f));\r\n        //loop(toLoadOnReady, f => { f(); });        \r\n    });\r\n\r\n    const addClasses = (elm, name) => elm.classList.add(...(name || '').trim().split(' ').filter(Boolean));\r\n    const remClasses = (elm, name) => elm.classList.remove(...(name || '').trim().split(' ').filter(Boolean));\r\n    const toggleClasses = (element, classes) => {\r\n        classes.split(' ').filter(Boolean).forEach(cls => element.classList.toggle(cls));\r\n    };\r\n\r\n    aquery.extend = function (a, b) {\r\n        if (a === true) {\r\n            // deep clone                \r\n            const [, ...nargs] = arguments;\r\n            return extend(...nargs);\r\n        }\r\n\r\n        if (len(arguments) === 1) {\r\n            return Object.assign(this, a);\r\n        }\r\n\r\n        return Object.assign(...arguments);\r\n    }\r\n\r\n    function isAdeferred(p) {\r\n        return p instanceof adeferred;\r\n    }\r\n\r\n    function mergeErrIntoAdeferred(err, adf) {\r\n        if (err) {\r\n            adf.errorThrown = err;\r\n            adf.statusText = err.message;\r\n            adf.status = err?.response.status;\r\n        }\r\n    }\r\n\r\n    const adeferred = function (arg) {\r\n        if (len(arguments) > 1) {\r\n            this.args = arguments;\r\n            const allprom = [...arguments]\r\n                .map(prom => isAdeferred(prom) ? prom.promise : prom);\r\n            this.promise = Promise.all([...allprom]);\r\n        }\r\n        else if (isFunc(arg?.then)) {\r\n            if (isAdeferred(arg)) {\r\n                this.adeferred = arg;\r\n\r\n                if (arg.res) {\r\n                    if (arg.res instanceof Promise) {\r\n                        this.promise = arg.res\r\n                    }\r\n                    else {\r\n                        this.res = arg.res;\r\n                    }\r\n                }\r\n                else if (arg.promise) {\r\n                    this.promise = arg.promise;\r\n                }\r\n            }\r\n            else {\r\n                this.promise = arg;\r\n            }\r\n        }\r\n        else {\r\n            this.res = arg;\r\n        }\r\n    }\r\n\r\n    function then(success, failure) {\r\n        const self = this;\r\n        if (isUndef(self.promise)) {\r\n            let sres = success(self.res);\r\n            self.res = sres;\r\n        } else {\r\n            const failureFunc = failure ? (arg1) => {\r\n                mergeErrIntoAdeferred(arg1, self);\r\n                failure(self);\r\n            } : null;\r\n\r\n            self.promise = self.promise.then(\r\n                function (res) {\r\n                    const ares = self.adeferred?.res;\r\n                    if (ares) {\r\n                        res = ares;\r\n                    }\r\n\r\n                    let sres;\r\n                    if (self.args) {\r\n                        const pairedResults = res.map((result, i) => {\r\n                            const thennable = self.args[i];\r\n                            const status = thennable.statusText;\r\n                            if (thennable.res) {\r\n                                result = thennable.res;\r\n                            }\r\n\r\n                            return status ? [result, status] : result;\r\n                        });\r\n\r\n                        sres = success(...pairedResults);\r\n                    }\r\n                    else {\r\n                        sres = success(res);\r\n                    }\r\n\r\n                    self.res = sres || res;\r\n                    self.statusText = null;\r\n\r\n                    return sres || res;\r\n                },\r\n                failureFunc);\r\n        }\r\n\r\n        return self;\r\n    }\r\n\r\n    adeferred.prototype.done = adeferred.prototype.then = then;\r\n\r\n    adeferred.prototype.fail = function (func) {\r\n        if (!isUndef(this.promise)) {\r\n            this.promise.catch((err) => {\r\n                mergeErrIntoAdeferred(err, this);\r\n                func(this);\r\n            })\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    adeferred.prototype.always = function () {\r\n        const alwaysArgs = arguments;\r\n        const exec = () => loop(alwaysArgs, f => f());\r\n\r\n        if (!isUndef(this.promise)) {\r\n            this.promise.finally(exec);\r\n        }\r\n        else {\r\n            exec();\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    aq.when = function () {\r\n        return new adeferred(...arguments);\r\n    }\r\n\r\n    aq.getScript = (url, success) => aq.ajax({ url, dataType: 'script', success });\r\n\r\n    aq.ajax = function (options, opt2) {\r\n        let url1;\r\n        if (isStr(options)) {\r\n            url1 = options;\r\n            options = opt2;\r\n        }\r\n\r\n        let { url, data, traditional, error, dataType, contentType } = options;\r\n\r\n        let method = options.method || options.type || 'get';\r\n\r\n        if (url1) {\r\n            url = url1;\r\n        }\r\n\r\n        method = method.toLowerCase();\r\n\r\n        if (method == 'get') traditional = true;\r\n\r\n        function serializeData(data) {\r\n            if (!data) return '';\r\n            if (!traditional && contentType == 'application/json') { return JSON.stringify(data); }\r\n\r\n            if (!Array.isArray(data)) {\r\n                data = serlObj(data);\r\n            }\r\n\r\n            return data.map(item => { return encodeURIComponent(item.name) + '=' + encodeURIComponent(item.value); }).join('&');\r\n        }\r\n\r\n        const fetchOptions = {\r\n            method: method, headers: { \"X-Requested-With\": \"XMLHttpRequest\" }\r\n        };\r\n\r\n        if (method === 'get') {\r\n            const queryString = serializeData(data);\r\n            if (queryString) {\r\n                url += url.includes('?') ? `&${queryString}` : `?${queryString}`;\r\n            }\r\n        }\r\n        else {\r\n            if (data instanceof FormData) {\r\n                fetchOptions.body = data;\r\n                // Content-Type is handled automatically by the browser\r\n            }\r\n            else {\r\n                fetchOptions.body = serializeData(data);\r\n                fetchOptions.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n            }\r\n        }\r\n\r\n        const promise = fetch(url, fetchOptions);\r\n\r\n        aq(document).trigger('ajaxSend', [promise, options]);\r\n\r\n        const xhr = aquery.when(promise\r\n            .then(response => {\r\n                const contentType = response.headers.get('Content-Type');\r\n\r\n                if (!response.ok) {\r\n                    return response.text().then(text => {\r\n                        let err = new Error(response.statusText);\r\n                        err.response = response;\r\n                        err.responseText = text;\r\n\r\n                        throw err;\r\n                    });\r\n                }\r\n\r\n                xhr.statusText = response.statusText;\r\n\r\n                if (contentType && contentType.includes('application/json')) {\r\n                    return response.json();\r\n                } else {\r\n                    return response.text();\r\n                }\r\n            })\r\n            .then(data => {\r\n                if (dataType == 'script') {\r\n                    const scriptElement = document.createElement('script');\r\n                    scriptElement.text = data;\r\n\r\n                    if (options.scriptAttrs) {\r\n                        for (const [key, value] of Object.entries(options.scriptAttrs)) {\r\n                            scriptElement.setAttribute(key, value);\r\n                        }\r\n                    }\r\n\r\n                    document.head.appendChild(scriptElement).parentNode.removeChild(scriptElement);\r\n                }\r\n\r\n                options.success && options.success(data);\r\n                return data;\r\n            })\r\n            .catch(err => {\r\n                aq(document).trigger('ajaxError', [promise, options, err]);\r\n                error && error(err);\r\n                throw err;\r\n            })\r\n            .finally(() => {\r\n                options.complete && options.complete();\r\n                aq(document).trigger('ajaxComplete', [promise, options]);\r\n            }));\r\n\r\n        return xhr;\r\n    }\r\n\r\n    aq.get = function (urlOrOpt, data, success, { method } = {}) {\r\n        if (isFunc(data)) {\r\n            success = data;\r\n            data = null;\r\n        }\r\n\r\n        if (urlOrOpt.url) {\r\n            urlOrOpt.method = 'post';\r\n            return aq.ajax(urlOrOpt, data, success);\r\n        }\r\n\r\n        return aq.ajax({ url: urlOrOpt, data, success, method });\r\n    }\r\n\r\n    aq.post = (url, data, success) => aq.get(url, data, success, { method: 'post' });\r\n\r\n    aq.inArray = (val, arr) => Array.from(arr).indexOf(val);\r\n\r\n    aq.grep = (array, callback) => array.filter((item, index) => callback(item, index));\r\n\r\n    aq.each = (array, f) => loop(array, function (it, ix) { return f(ix, it) });\r\n\r\n    aq.Event = function (type) {\r\n        const [name, namespace] = type.split('.', 2);\r\n        const initDict = { cancelable: true, bubbles: true, isTrusted: true };\r\n        let init = name == 'click' ? MouseEvent : Event;\r\n        let ev = new init(name, initDict);\r\n        ev.namespace = namespace;\r\n\r\n        return ev;\r\n    };\r\n\r\n    aq.map = (array, f) => array.map(f);\r\n\r\n    const isSelector = (node, selector) => {\r\n        if (!node.matches) return;\r\n        if (isNullOrEmp(selector)) {\r\n            return true;\r\n        }\r\n\r\n        const res = customSelector([node], selector, { useFilter: 1 });\r\n        return len(res) === 1;\r\n    };\r\n\r\n    const closestRanked = (node, selector) => {\r\n        const closestRankRed = (node, selector, rank) => {\r\n            if (!node) return;\r\n            if (isSelector(node, selector)) return [node, rank];\r\n            return closestRankRed(node.parentNode, selector, rank + 1);\r\n        };\r\n\r\n        return closestRankRed(node, selector, 0);\r\n    };\r\n\r\n    const closestSelector = (node, selector) => {\r\n        if (!node.closest) return;\r\n\r\n        const res = closestRanked(node, selector);\r\n        if (len(res)) return res[0];\r\n    }\r\n\r\n    const recalcAqArr = aqthis => {\r\n        loop(aqthis.nodes, (n, i) => aqthis[i] = n);\r\n        aqthis.length = len(aqthis.nodes);\r\n    };\r\n\r\n    function remNode(n, detach) {\r\n        if (!detach) {\r\n            n.aweEvs = null;\r\n        }\r\n\r\n        n.remove();\r\n    }\r\n\r\n    // force reflow, for subsequent .css changes transitions to work\r\n    const reflow = self => {\r\n        const f = firstNode(self)\r\n        if (f) f.offsetWidth;\r\n        return self;\r\n    };\r\n\r\n    aquery.fn = aquery.prototype = {\r\n        init: function (arg, arg2) {\r\n\r\n            if (isFunc(arg)) {\r\n                onDocReady(arg, arg2);\r\n                return;\r\n            }\r\n\r\n            // html\r\n            if (typeof arg === 'string' && arg.startsWith('<')) {\r\n                arg = strToNode(arg);\r\n            }\r\n\r\n            this.setNodes(arg);\r\n\r\n            return this;\r\n        },\r\n        get: function (i) {\r\n            if (isUndef(i)) {\r\n                return this.nodes;\r\n            }\r\n\r\n            return this.nodes[i];\r\n        },\r\n        ajaxComplete: function (func) {\r\n            return aq(document).on('ajaxComplete', func);\r\n        },\r\n        ajaxError: function (func) {\r\n            return aq(document).on('ajaxError', func);\r\n        },\r\n        wrap: function (str) {\r\n            const wrapperNode = strToNode(str);\r\n            this.before(wrapperNode);\r\n            this.appendTo(wrapperNode);\r\n            return this;\r\n        },\r\n        wrapAll: function (str) {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                const wrap = strToNode(str);\r\n                this.parent().append(wrap);\r\n                loop(this.nodes, n => aquery(wrap).append(n));\r\n            }\r\n\r\n            return this;\r\n        },\r\n        each: function (func) {\r\n            loop(this.nodes, function (node, i) {\r\n                return func.call(node, i, node);\r\n            });\r\n            return this;\r\n        },\r\n        data: function (name, val) {\r\n            const f = firstNode(this);\r\n            const rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/; // test for json \r\n            if (f) {\r\n                let elmData = dataWeakMap.get(f) || {};\r\n\r\n                if (len(arguments) == 0) {\r\n                    return elmData;\r\n                }\r\n\r\n                if (len(arguments) == 1) {\r\n\r\n                    if (isObject(name)) {\r\n                        elmData = aq.extend({}, elmData, name);\r\n                        dataWeakMap.set(f, elmData);\r\n                        return this;\r\n                    }\r\n\r\n                    let data = elmData[name];\r\n\r\n                    if (isUndef(data) && f.dataset) {\r\n                        data = f.dataset[name];\r\n\r\n                        if (typeof data === \"string\") {\r\n                            try {\r\n                                data = data === \"true\" ? true :\r\n                                    data === \"false\" ? false :\r\n                                        data === \"null\" ? null :\r\n                                            +data + \"\" === data ? +data : // <- This line converts numeric string to Number\r\n                                                rbrace.test(data) ? JSON.parse(data) : data;\r\n                            } catch (e) { }\r\n                        }\r\n                    }\r\n\r\n                    return data;\r\n                }\r\n\r\n                // set\r\n                elmData[name] = val;\r\n                dataWeakMap.set(f, elmData);\r\n\r\n                return this;\r\n            }\r\n        },\r\n        first: function () {\r\n            return aquery(firstNode(this));\r\n        },\r\n        last: function () {\r\n            const nodes = this.nodes;\r\n            const l = len(nodes);\r\n\r\n            if (l) {\r\n                return aquery(nodes[l - 1]);\r\n            }\r\n\r\n            return aquery();\r\n        },\r\n        toArray: function () {\r\n            return Array.from(this);\r\n        },\r\n        find: function (selector) {\r\n            const res = new Set();\r\n\r\n            loop(this.nodes, n => {\r\n                customSelector([n], selector).forEach(r => res.add(r));\r\n            });\r\n\r\n            return aquery(Array.from(res));\r\n        },\r\n        children: function (selector) {\r\n            const res = new Set();\r\n            loop(this.nodes, n => {\r\n                customSelector(Array.from(n.children), selector, { useFilter: 1 }).forEach(r => res.add(r));\r\n            });\r\n\r\n            return aquery(Array.from(res));\r\n        },\r\n        nextUntil(selector, filterStr, { prev } = {}) {\r\n            const res = new Set();\r\n            const nxprop = prev ? 'previousElementSibling' : 'nextElementSibling';\r\n            loop(this.nodes, n => {\r\n                let nx = n[nxprop];\r\n\r\n                while (nx) {\r\n                    if (isSelector(nx, selector)) {\r\n                        break;\r\n                    }\r\n\r\n                    if (isSelector(nx, filterStr)) {\r\n                        res.add(nx);\r\n                    }\r\n                    nx = nx[nxprop];\r\n                }\r\n            });\r\n\r\n            return aq(Array.from(res));\r\n        },\r\n        prevUntil(selector, filterStr) {\r\n            return this.nextUntil(selector, filterStr, { prev: 1 });\r\n        },\r\n        filter: function (arg) {\r\n            let res;\r\n            if (isStr(arg)) {\r\n                res = customSelector(this.nodes, arg, { useFilter: 1 });\r\n            }\r\n\r\n            if (isFunc(arg)) {\r\n                res = (this?.nodes || []).filter((n, i) => arg.call(n, i, n));\r\n            }\r\n\r\n            return aquery(res);\r\n        },\r\n        closest: function (arg) {\r\n            function isAncestor(current, nodeWeLookFor) {\r\n                if (isNull(current)) return;\r\n                if (current === nodeWeLookFor) return true;\r\n                return isAncestor(current.parentNode, nodeWeLookFor);\r\n            }\r\n\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                if (isStr(arg)) {\r\n                    return aquery(closestSelector(f, arg));\r\n                }\r\n                else {\r\n                    let argNode = isAquery(arg) ? firstNode(arg) : arg;\r\n                    if (isAncestor(f, argNode)) {\r\n                        return aquery(argNode);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return aquery();\r\n        },\r\n        parents: function (arg) { return this.closest(arg); },\r\n        attr: function (name, val) {\r\n            if (isUndef(val)) {\r\n                const f = firstNode(this);\r\n                if (f && f.getAttribute) {\r\n                    return f.getAttribute(name);\r\n                }\r\n                return null;\r\n            }\r\n            else {\r\n                loop(this.nodes, n => n && n.setAttribute && n.setAttribute(name, val));\r\n                return this;\r\n            }\r\n        },\r\n        removeAttr: function (name) {\r\n            loop(this.nodes, n => n.removeAttribute(name));\r\n            return this;\r\n        },\r\n        css: function (prop, val) {\r\n            let objval;\r\n\r\n            const setStyle = (n, prop, val) => {\r\n                prop = prop.toLowerCase();\r\n                const nrprops = [\"left\", \"top\", \"right\", \"bottom\", \"width\", \"height\"];\r\n\r\n                if (nrprops.some(w => prop.endsWith(w))) {\r\n                    if (typeof val === 'number') {\r\n                        val = `${val}px`;\r\n                    }\r\n                }\r\n\r\n                n.style[prop] = val;\r\n            }\r\n\r\n            if (typeof prop === 'object') {\r\n                objval = prop;\r\n            }\r\n\r\n            if (len(arguments) === 1 && !objval) {\r\n                const f = firstNode(this)\r\n                if (f) {\r\n                    return window.getComputedStyle(f)[prop];\r\n                }\r\n            }\r\n            else {\r\n                loop(this.nodes, n => {\r\n                    if (objval) {\r\n                        loop(Object.entries(objval), ([k, v]) => { setStyle(n, k, v); });\r\n                    }\r\n                    else {\r\n                        setStyle(n, prop, val);\r\n                    }\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n        outerHeight: function (p1, p2, { horiz } = {}) {\r\n            let includeMargin, valToSet;\r\n\r\n            if (!isNull(p1)) {\r\n                if (isBool(p1)) {\r\n                    includeMargin = p1;\r\n                }\r\n                else {\r\n                    valToSet = p1;\r\n                    includeMargin = p2;\r\n                }\r\n            }\r\n\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                const prop = horiz ? 'Width' : 'Height';\r\n                const outer = includeMargin ? 2 : 1;\r\n\r\n                if (valToSet) {\r\n                    // remove space from valToSet                    \r\n                    return this.height(valToSet, { outer, horiz });\r\n                }\r\n\r\n                if (f == window) return window[`outer${prop}`];\r\n                if (f == document) return f.documentElement[`scroll${prop}`];\r\n                if (!isVisible(f)) return 0;\r\n\r\n                return getDimForElm(f, { outer, horiz });\r\n            }\r\n        },\r\n        outerWidth: function (includeMargin, arg2,) {\r\n            return this.outerHeight(includeMargin, arg2, { horiz: 1 });\r\n        },\r\n        height: function (val, { outer, horiz = 0 } = {}) {\r\n            const f = firstNode(this),\r\n                isGet = isUndef(val);\r\n\r\n            if (f) {\r\n                if (isGet) {\r\n                    if (f == window)\r\n                        return document.documentElement[horiz ? 'clientWidth' : 'clientHeight'];\r\n\r\n                    if (f == document)\r\n                        return f.documentElement[horiz ? 'scrollWidth' : 'scrollHeight'];\r\n                    if (!isVisible(f)) return 0;\r\n                }\r\n\r\n                if (isGet) {\r\n                    return getDimForElm(f, { content: 1, bord: 1, horiz });\r\n                }\r\n\r\n                let borderAndPad = getDimForElm(f, { bord: 1, horiz })\r\n\r\n                if (outer) {\r\n                    //set outerHeight(val)\r\n                    borderAndPad = 0;\r\n                }\r\n\r\n                let valToSet = val - borderAndPad;\r\n                this.css(horiz ? 'width' : 'height', valToSet);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        width: function (val) {\r\n            return this.height(val, { horiz: 1 });\r\n        },\r\n        hide: function () {\r\n            loop(this.nodes, n => hide(n));\r\n\r\n            return this;\r\n        },\r\n        show: function () {\r\n            loop(this.nodes, n => show(n));\r\n\r\n            return reflow(this);\r\n        },\r\n        fadeOut: function (duration = 400, callback) {\r\n            loop(this.nodes, n => {\r\n                n.style.transition = `opacity ${duration}ms`;\r\n                n.style.opacity = 0;\r\n                setTimeout(() => {\r\n                    hide(n);\r\n                    if (callback) { callback.call(n); }\r\n                }, duration);\r\n            });\r\n\r\n            return this;\r\n        },\r\n        scrollTop: function (val, { left } = {}) {\r\n            //const wprop = left ? 'scrollX' : 'scrollY';\r\n            const prop = left ? 'scrollLeft' : 'scrollTop';\r\n            function getNodeAndProp(f) {\r\n                if (f == document || f == window) return [document.documentElement, prop];\r\n                //if (f == window) return [f, wprop];\r\n                return [f, prop];\r\n            }\r\n\r\n            if (isUndef(val)) {\r\n                const f = firstNode(this);\r\n                if (f) {\r\n                    const [node, prop] = getNodeAndProp(f);\r\n                    return node[prop];\r\n                }\r\n            }\r\n            else {\r\n                loop(this.nodes, n => {\r\n                    const [node, prop] = getNodeAndProp(n);\r\n                    node[prop] = val;\r\n\r\n                    //if (n === window) {\r\n                    //    n.scrollTo(window[wprop], val);\r\n                    //}\r\n                    //else {\r\n                    //    n[prop] = val;\r\n                    //}\r\n                });\r\n\r\n                return this;\r\n            }\r\n        },\r\n        scrollLeft: function (val) {\r\n            return this.scrollTop(val, { left: 1 });\r\n        },\r\n        position: function () {\r\n            const elm = firstNode(this);\r\n            const rect = elm.getBoundingClientRect();\r\n            const ofsPrnt = elm.offsetParent;\r\n\r\n            if (!ofsPrnt) {\r\n                return { left: rect.left, top: rect.top };\r\n            }\r\n\r\n            const offsetParentRect = ofsPrnt.getBoundingClientRect();\r\n            const lbordW = parseFloat(getComputedStyle(ofsPrnt).borderLeftWidth) || 0;\r\n\r\n            return {\r\n                top: rect.top - offsetParentRect.top + elm.offsetParent.scrollTop,\r\n                left: rect.left - offsetParentRect.left + elm.offsetParent.scrollLeft - lbordW\r\n            };\r\n        },\r\n        offset: function () {\r\n            const elm = firstNode(this);\r\n            const rect = elm.getBoundingClientRect();\r\n\r\n            return {\r\n                top: rect.top + window.scrollY,\r\n                left: rect.left + window.scrollX\r\n            }\r\n        },\r\n        remove: function () {\r\n            loop(this.nodes, n => remNode(n));\r\n            return this;\r\n        },\r\n        detach: function () {\r\n            loop(this.nodes, n => remNode(n, 1));\r\n            return this;\r\n        },\r\n        is: function (arg) {\r\n            if (isStr(arg)) {\r\n                return this.nodes?.some(n => isSelector(n, arg));\r\n            } else if (isAquery(arg)) {\r\n                return this.nodes?.some(n => arg.nodes.includes(n))\r\n            } else {\r\n                return this.nodes?.some(n => arg === n);\r\n            }\r\n\r\n            return;\r\n        },\r\n        addClass: function (name) {\r\n            loop(this.nodes, n => addClasses(n, name));\r\n            return this;\r\n        },\r\n        removeClass: function (name) {\r\n            loop(this.nodes, n => remClasses(n, name));\r\n            return this;\r\n        },\r\n        toggleClass: function (cssClasses) {\r\n            loop(this.nodes, n => toggleClasses(n, cssClasses));\r\n            return this;\r\n        },\r\n        hasClass: function (name) {\r\n            return this.nodes?.some(n => n.classList?.contains(name));\r\n        },\r\n        on: function (events, filter, handler, opt) {\r\n            let [eventsArrPrm, filterPrm, handlerPrm] = getEvParam(events, filter, handler);\r\n            filterPrm = simpleSelectorParse(filterPrm);\r\n\r\n            loop(this.nodes, node => {\r\n                eventsArrPrm.forEach(function ([ev, ns]) {\r\n                    let aweEvs = node.aweEvs || {};\r\n                    let evBindings = aweEvs[ev];\r\n\r\n                    if (isNull(evBindings)) {\r\n                        node.addEventListener(ev, wrapHandler);\r\n                        aweEvs[ev] = evBindings = new Set();\r\n                    }\r\n\r\n                    evBindings.add({ filter: filterPrm, handler: handlerPrm, ns, one: opt?.one });\r\n                    node.aweEvs = aweEvs;\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n        one: function (events, filter, handler) {\r\n            return this.on(events, filter, handler, { one: 1 });\r\n        },\r\n        off: function (events, filter, handler) {\r\n            let [eventsArrPrm, filterPrm, handlerPrm] = getEvParam(events, filter, handler);\r\n            filterPrm = simpleSelectorParse(filterPrm);\r\n\r\n            function match(b, flt1, handler1, ns) {\r\n                let res = 1;\r\n\r\n                if (flt1) {\r\n                    res = res && flt1 === b.filter;\r\n                }\r\n\r\n                if (handler1) {\r\n                    res = res && handler1 === b.handler;\r\n                }\r\n\r\n                if (ns) {\r\n                    res = res && ns === b.ns;\r\n                }\r\n\r\n                return res;\r\n            }\r\n\r\n            loop(this.nodes, node => {\r\n                for (const [evType, ns] of eventsArrPrm) {\r\n                    const aweEvs = node.aweEvs || {};\r\n                    const bindings = aweEvs[evType];\r\n\r\n                    if (!bindings) continue;\r\n\r\n                    let toRemove = Array.from(bindings).filter(b => match(b, filterPrm, handlerPrm, ns));\r\n\r\n                    if (len(toRemove)) {\r\n                        toRemove.forEach(b => bindings.delete(b));\r\n                    }\r\n\r\n                    if (!bindings.size) {\r\n                        node.removeEventListener(evType, wrapHandler);\r\n                        aweEvs[evType] = null;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        setNodes: function (arg) {\r\n\r\n            let nodes = this.nodes;\r\n\r\n            if (arg === window || arg === document) {\r\n                nodes = [arg]\r\n            }\r\n            else if (arg instanceof NodeList || arg instanceof Array) {\r\n                nodes = [...arg]\r\n            }\r\n            else if (arg instanceof Node) {\r\n                nodes = [arg];\r\n            }\r\n            else if (isAquery(arg)) {\r\n                nodes = arg.nodes;\r\n            }\r\n            else if (isStr(arg)) {\r\n                nodes = customSelector([document], arg);\r\n            }\r\n            else {\r\n                nodes = null;\r\n            }\r\n\r\n            this.nodes = nodes;\r\n\r\n            recalcAqArr(this);\r\n\r\n            return this;\r\n        },\r\n        add: function (arg) {\r\n            if (isAquery(arg)) {\r\n                const nodes = new Set(this.nodes);\r\n                arg.nodes.forEach(n => nodes.add(n));\r\n                this.nodes = [...nodes];\r\n                recalcAqArr(this);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        not: function (arg) {\r\n            let toRemoveNodes;\r\n            if (isStr(arg)) {\r\n                toRemoveNodes = customSelector(this.nodes, arg, { useFilter: 1 });\r\n            }\r\n            else {\r\n                toRemoveNodes = Array.from(arg);\r\n            }\r\n\r\n            return aquery(this.nodes.filter(n => !toRemoveNodes.includes(n)));\r\n        },\r\n        clone: function () {\r\n            return aquery(select(this.nodes, n => n.cloneNode(true)));\r\n        },\r\n        append: function (arg) {\r\n            //const f = firstNode(this);\r\n\r\n            function add(node, prm) {\r\n                if (Array.isArray(prm)) {\r\n                    loop(prm, itm => add(node, itm));\r\n                }\r\n                else if (isAquery(prm)) {\r\n                    loop(prm.nodes, n => node.appendChild(n));\r\n                }\r\n                else if (prm instanceof Node) {\r\n                    node.appendChild(prm);\r\n                }\r\n                else {\r\n                    appendFragment(node, prm);\r\n                }\r\n            }\r\n\r\n            loop(this.nodes, n => add(n, arg));\r\n\r\n            return reflow(this);\r\n        },\r\n        appendTo: function (arg) {\r\n            aquery(arg).append(this);\r\n            return this;\r\n        },\r\n        prependTo: function (arg) {\r\n            aquery(arg).prepend(this);\r\n            return this;\r\n        },\r\n        prepend: function (arg) {\r\n            loop(this.nodes, n => {\r\n                if (isStr(arg)) {\r\n                    n.insertAdjacentHTML('afterbegin', arg);\r\n                }\r\n                else if (isAquery(arg)) {\r\n                    n.prepend(arg.nodes[0]);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        before: function (arg) {\r\n\r\n            function add(n, prmToAdd) {\r\n                if (Array.isArray(prmToAdd)) {\r\n                    loop(prmToAdd, itm => add(n, itm));\r\n                }\r\n                else if (isAquery(prmToAdd)) {\r\n                    loop(prmToAdd.nodes, node => add(n, node));\r\n                }\r\n                else if (prmToAdd instanceof Node) {\r\n                    //applyScriptsForNode(prmToAdd);\r\n                    n.parentNode.insertBefore(prmToAdd, n);\r\n                }\r\n                else if (isStr(prmToAdd)) {\r\n                    appendFragment(n, prmToAdd, { before: 1 })\r\n                }\r\n                else {\r\n                    // int, other\r\n                    appendFragment(n, String(prmToAdd), { before: 1 })\r\n                }\r\n            }\r\n\r\n            loop(this.nodes, n => add(n, arg));\r\n\r\n            return this;\r\n        },\r\n        after: function (arg) {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                if (isStr(arg)) {\r\n                    f.insertAdjacentHTML('afterend', arg);\r\n                }\r\n                else if (isAquery(arg)) {\r\n                    const next = f.nextElementSibling;\r\n                    if (next) {\r\n                        next.parentNode.insertBefore(arg.nodes[0], next);\r\n                    } else {\r\n                        f.parentNode?.appendChild(arg.nodes[0]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        html: function (arg) {\r\n            const f = firstNode(this);\r\n            if (f && !len(arguments)) {\r\n                return f.innerHTML;\r\n            }\r\n            else {\r\n                loop(this.nodes, n => {\r\n                    if (!isObject(arg)) {\r\n                        setHTMLWithScripts(n, arg);\r\n                    }\r\n                    else {\r\n                        aquery(n).append(arg);\r\n                    }\r\n                });\r\n\r\n                return this;\r\n            }\r\n        },\r\n        focus: function () {\r\n            const f = firstNode(this);\r\n            if (f && f.focus) {\r\n                f.focus();\r\n            }\r\n            return this;\r\n        },\r\n        empty: function () {\r\n            loop(this.nodes, n => n.innerHTML = '')\r\n            return this;\r\n        },\r\n        val: function (arg) {\r\n            if (len(arguments)) {\r\n                arg = isNull(arg) ? '' : arg;\r\n\r\n                loop(this.nodes, n => {\r\n                    n.value = arg;\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            const f = firstNode(this);\r\n            return f?.value;\r\n        },\r\n        prop: function (name, val) {\r\n            const f = firstNode(this);\r\n            if (name == 'class') {\r\n                name = 'className';\r\n            }\r\n\r\n            if (f && len(arguments) == 1) {\r\n                return f[name];\r\n            }\r\n\r\n            loop(this.nodes, n => {\r\n                n[name] = val;\r\n            });\r\n\r\n            return this;\r\n        },\r\n        trigger: function (name, data) {\r\n            loop(this.nodes, n => trigger(n, name, data));\r\n            return this;\r\n        },\r\n        serializeArray: function () {\r\n            let res = [];\r\n            let inputs = new Set();\r\n\r\n            loop(this.nodes, n => {\r\n                if (isForm(n)) {\r\n                    [...n.elements].forEach(c => inputs.add(c));\r\n                }\r\n                else {\r\n                    inputs.add(n);\r\n                }\r\n            });\r\n\r\n            loop([...inputs], serializeInput);\r\n\r\n            function serializeInput(n) {\r\n                let name = attr(n, 'name');\r\n                if (!n.disabled && name && (!['checkbox', 'radio'].includes(n.type) || n.checked)) {\r\n                    res.push({ name: name, value: n.value });\r\n                }\r\n            }\r\n\r\n            return res;\r\n        },\r\n        index: function (arg) {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                if (arg) {\r\n                    // element or aquery\r\n                    if (isAquery(arg)) {\r\n                        arg = firstNode(arg);\r\n                    }\r\n\r\n                    return Array.prototype.indexOf.call(this.nodes, arg);\r\n                }\r\n\r\n                if (!f.parentNode) {\r\n                    return Array.prototype.indexOf.call(this.nodes, f);\r\n                }\r\n\r\n                return Array.prototype.indexOf.call(f.parentNode.children, f);\r\n            }\r\n        },\r\n        eq: function (i) {\r\n            if (len(this.nodes) > i) {\r\n                return aquery(this.nodes[i]);\r\n            }\r\n\r\n            return aquery();\r\n        },\r\n        prev: function () {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                return aquery(f.previousElementSibling);\r\n            }\r\n            return this;\r\n        },\r\n        next: function () {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                return aquery(f.nextElementSibling);\r\n            }\r\n            return this;\r\n        },\r\n        parent: function () {\r\n            const f = firstNode(this);\r\n            if (f) {\r\n                return aquery(f.parentNode);\r\n            }\r\n\r\n            return null;\r\n        },\r\n        nextAll: function (selector, { prev } = {}) {\r\n            let res = new Set();\r\n            let prop = prev ? 'previousElementSibling' : 'nextElementSibling';\r\n\r\n            loop(this.nodes, n => {\r\n                let next = n[prop];\r\n\r\n                while (next) {\r\n                    res.add(next);\r\n                    next = next[prop];\r\n                }\r\n            });\r\n\r\n            res = Array.from(res);\r\n\r\n            if (selector) {\r\n                res = res.filter(sibling => sibling.matches(selector));\r\n            }\r\n\r\n            return aquery(res);\r\n        },\r\n        prevAll: function (selector) {\r\n            return this.nextAll(selector, { prev: 1 });\r\n        },\r\n        map: function (func) {\r\n            this.setNodes(select(this.nodes, (n, i) => func.call(n, i, n)));\r\n            return this;\r\n        },\r\n        bind: function (event, handler) {\r\n            return this.on(event, handler);\r\n        }\r\n    };\r\n\r\n    aquery.fn.init.prototype = aquery.fn;\r\n\r\n    ['click', 'change', 'keydown', 'keyup', 'mousedown', 'mouseup', 'submit', 'dblclick'].forEach(type => aquery.fn[type] = getEventFunc(type));\r\n\r\n    function getEventFunc(name) {\r\n        return function (handler) {\r\n            if (!len(arguments)) {\r\n                return this.trigger(name);\r\n            }\r\n\r\n            return this.on(name, handler);\r\n        }\r\n    }\r\n\r\n    function isNull(val) {\r\n        return val === undefined || val === null;\r\n    }\r\n\r\n    function isBool(val) {\r\n        return val === true || val === false;\r\n    }\r\n\r\n    function loop(arr, f) {\r\n        if (arr) {\r\n            for (let i = 0, ln = len(arr); i < ln; i++) {\r\n                let col = arr[i];\r\n                if (f(col, i) === false) {\r\n                    break;\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    function select(list, func) {\r\n        let res = [];\r\n        loop(list, function (el, i) {\r\n            res.push(func(el, i));\r\n        });\r\n\r\n        return res;\r\n    }\r\n\r\n    function len(o) {\r\n        return !o ? 0 : o.length;\r\n    }\r\n\r\n    function isNullOrEmp(val) {\r\n        return isNull(val) || len(val.toString()) === 0;\r\n    }\r\n\r\n    function replaceAll(str, search, replacement) {\r\n        return str.split(search).join(replacement ?? '');\r\n    }\r\n\r\n    function trigger(elm, ename, data) {\r\n        if (len(elm) && elm?.tagName !== 'FORM') {\r\n            elm = elm[0];\r\n        }\r\n\r\n        if (elm) {\r\n            const ev = typeof ename === 'object' ? ename : aq.Event(ename);\r\n\r\n            ev.aweData = data;\r\n            elm.dispatchEvent(ev);\r\n\r\n            if (!ev.defaultPrevented) {\r\n                if (ename === 'focus') {\r\n                    elm.focus && elm.focus();\r\n                }\r\n\r\n                if (ename === 'submit') {\r\n                    elm.submit && elm.submit();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function serlObj(jobj) {\r\n        let res = [];\r\n\r\n        for (let key in jobj) {\r\n            if (!Array.isArray(jobj[key]))\r\n                res.push({ name: key, value: jobj[key] });\r\n            else res = res.concat(awef.serlArr(jobj[key], key));\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    function isVisible(element) {\r\n        if (!element || !element.isConnected) return false;\r\n\r\n        let current = element;\r\n        while (current) {\r\n            const style = window.getComputedStyle(current);\r\n            if (style.display === 'none') return false;\r\n            current = current.parentElement;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function addAttrValQuotes(str) {\r\n        return str.replace(/\\[([^=]+)=(['\"]?)([^\\]]*?)\\2\\]/g, (match, attr, quote, val) => {\r\n            if (!quote) { // Only add quotes if they are not already present\r\n                return `[${attr}=\"${val}\"]`;\r\n            }\r\n\r\n            return match; // Return the original match if quotes are already present\r\n        });\r\n    }\r\n\r\n    function hide(n) {\r\n        let d = n.style.display;\r\n        if (d == 'none') return;\r\n        displayWeakMap.set(n, d);\r\n        n.style.display = 'none';\r\n    }\r\n\r\n    function show(n) {\r\n        let dval = displayWeakMap.get(n) || '';\r\n        n.style.display = dval;\r\n\r\n        let styles = getComputedStyle(n);\r\n\r\n        if (styles.display === 'none') {\r\n            const tagVisMap = {\r\n                TR: 'table-row'\r\n            };\r\n\r\n            dval = tagVisMap[n.tagName] || 'block';\r\n\r\n            n.style.display = dval;\r\n        }\r\n    }\r\n\r\n    // won't split by commas inside [,]\r\n    function splitSelectorByCommas(selector) {\r\n        const parts = [];\r\n        let currentPart = \"\";\r\n        let inAttributeSelector = false;\r\n\r\n        for (let i = 0; i < selector.length; i++) {\r\n            const char = selector[i];\r\n\r\n            if (char === \"[\") {\r\n                inAttributeSelector = true;\r\n            } else if (char === \"]\") {\r\n                inAttributeSelector = false;\r\n            } else if (char === \",\" && !inAttributeSelector) {\r\n                parts.push(currentPart.trim());\r\n                currentPart = \"\";\r\n                continue; // Skip the comma\r\n            }\r\n\r\n            currentPart += char;\r\n        }\r\n\r\n        currentPart.trim() && parts.push(currentPart.trim()); // Add the last part\r\n\r\n        return parts;\r\n    }\r\n\r\n    function customSelector(startNodes, selector, { useFilter } = {}) {\r\n        const regex = /(:hidden|:visible|:eq\\(\\d+\\)|:first|:last|:input)/;\r\n        if (isNullOrEmp(selector) || !startNodes) return startNodes;\r\n\r\n        // escape id starting with number (not allowed in querySelectorAll)\r\n        if (/^#[0-9]/.test(selector)) {\r\n            selector = `#${CSS.escape(selector.substring(1))}`;\r\n        }\r\n\r\n        // :checkbox :radio\r\n        selector = simpleSelectorParse(selector);\r\n\r\n        if (!regex.test(selector)) {\r\n            return query(startNodes, selector);\r\n        }\r\n\r\n        function query(nodes, sel, mustUseFilter) {\r\n            return useFilter || mustUseFilter ? nodes.filter(n => n.matches(sel)) :\r\n                nodes.flatMap(n => Array.from(n.querySelectorAll(sel)));\r\n        }\r\n\r\n        const results = new Set();\r\n        const byCommaParts = splitSelectorByCommas(selector).filter(Boolean);\r\n\r\n        for (const commaPart of byCommaParts) {\r\n            let cnodes = startNodes;\r\n\r\n            const bySpaceParts = commaPart.split(' ').filter(Boolean);\r\n\r\n            for (const spacePart of bySpaceParts) {\r\n                const keywparts = spacePart.trim().split(regex).filter(Boolean).map(s => s.trim()).filter(Boolean);\r\n\r\n                keywparts.forEach((wpart, index) => {\r\n                    let nlen = len(cnodes);\r\n\r\n                    if (!nlen) return false;\r\n                    if (wpart === \":visible\") {\r\n                        cnodes = cnodes.filter(isVisible);\r\n                    }\r\n                    else if (wpart === \":hidden\") {\r\n                        cnodes = cnodes.filter(n => !isVisible(n));\r\n                    }\r\n                    else if (wpart.startsWith(\":eq(\")) {\r\n                        const i = parseInt(wpart.slice(4, -1));\r\n                        if (i >= 0 && i < nlen) {\r\n                            cnodes = [cnodes[i]];\r\n                        } else {\r\n                            cnodes = [];\r\n                        }\r\n                    } else if (wpart === \":first\") {\r\n                        cnodes = nlen > 0 ? [cnodes[0]] : [];\r\n                    } else if (wpart === \":last\") {\r\n                        cnodes = nlen > 0 ? [cnodes[nlen - 1]] : [];\r\n                    }\r\n                    else if (wpart === \":input\") {\r\n                        cnodes = query(cnodes, 'input, select, textarea, button');\r\n                    }\r\n                    else {\r\n                        cnodes = query(cnodes, wpart, !!index); // use filter after i = 0\r\n                    }\r\n                });\r\n\r\n                // rem duplicates\r\n                // cnodes.forEach(node => results.add(node));\r\n            }\r\n\r\n            // rem duplicates\r\n            cnodes.forEach(node => results.add(node));\r\n        }\r\n\r\n        let res = Array.from(results);\r\n\r\n        if (!useFilter) {\r\n            res = res.sort((a, b) => {\r\n                if (a === b) return 0;\r\n                if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_PRECEDING) {\r\n                    return 1;\r\n                }\r\n                return -1;\r\n            });\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    function setHTMLWithScripts(node, html) {\r\n        node.innerHTML = html;\r\n        applyScriptsForNode(node);\r\n    }\r\n\r\n    function strToNode(arg) {\r\n        const tempContainer = document.createElement(arg.startsWith('<tr') ? 'tbody' : 'div');\r\n        tempContainer.innerHTML = arg;\r\n        return [...tempContainer.childNodes];\r\n    }\r\n\r\n    function appendFragment(node, arg, { before } = {}) {\r\n        if (!node) return;\r\n        let isTr;\r\n\r\n        if (isStr(arg) && arg.trim().startsWith('<tr')) {\r\n            isTr = 1;\r\n            arg = `<table><tbody>${arg}</tbody></table>`;\r\n        }\r\n\r\n        const range = document.createRange();\r\n        range.selectNode(document.body);\r\n        const frg = range.createContextualFragment(arg);\r\n\r\n        if (!isTr) {\r\n            if (before) {\r\n                node.parentNode.insertBefore(frg, node);\r\n            }\r\n            else {\r\n                node.appendChild(frg);\r\n            }\r\n\r\n            //applyScriptsForNode(frg);\r\n        }\r\n        else {\r\n            const rows = Array.from(frg.childNodes[0].childNodes[0].childNodes);\r\n\r\n            if (before) {\r\n                loop(rows, newNode => node.parentNode.insertBefore(newNode, node));\r\n            }\r\n            else {\r\n                loop(rows, r => node.appendChild(r));\r\n            }\r\n\r\n            //loop(rows, applyScriptsForNode);\r\n        }\r\n\r\n        // appendChild and insertBefore executes present scripts\r\n    }\r\n\r\n    function applyScriptsForNode(node) {\r\n        const scripts = node.querySelectorAll('script');\r\n        scripts.forEach((script) => {\r\n            const newScript = document.createElement('script');\r\n            newScript.textContent = script.textContent;\r\n\r\n            Array.from(script.attributes).forEach(attr => { newScript.setAttribute(attr.name, attr.value); });\r\n\r\n            script.parentNode.replaceChild(newScript, script);\r\n        });\r\n    }\r\n\r\n    function simpleSelectorParse(sel) {\r\n        if (!sel) return sel;\r\n        let res = replaceAll(sel, ':checkbox', '[type=\"checkbox\"]');\r\n        res = replaceAll(res, ':radio', '[type=\"radio\"]');\r\n        res = addAttrValQuotes(res);\r\n        return res;\r\n    }\r\n\r\n    function getEvParam(events, filter, handler) {\r\n        const eventsArr = events.split(' ')\r\n            .filter(Boolean)\r\n            .map(evname => {\r\n                let parts = evname.split('.');\r\n                return [parts[0], parts.slice(1).join('.')];\r\n            });\r\n\r\n        if (isFunc(filter)) {\r\n            handler = filter;\r\n            filter = null;\r\n        }\r\n\r\n        return [eventsArr, filter, handler];\r\n    }\r\n\r\n    function firstNode(aqObj) {\r\n        if (len(aqObj?.nodes)) {\r\n            return aqObj.nodes[0];\r\n        }\r\n    }\r\n\r\n    function attr(elm, name, val) {\r\n        if (elm == window || elm == document) return;\r\n        if (isUndef(val)) {\r\n            return elm.getAttribute(name);\r\n        }\r\n        else {\r\n            return elm.setAttribute(name, val);\r\n        }\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        if (!isObject(obj)) return false;\r\n\r\n        const proto = Object.getPrototypeOf(obj);\r\n        return isNull(proto) || proto === Object.prototype;\r\n    }\r\n\r\n    function extend() {\r\n        let target = arguments[0] || {};\r\n\r\n        // Handle case when target is a string or something (possible in deep copy)\r\n        if (!isObject(target) && !isFunc(target)) {\r\n            target = {};\r\n        }\r\n\r\n        for (let i = 1; i < len(arguments); i++) {\r\n            let options = arguments[i];\r\n\r\n            // Only deal with non-null/undefined values\r\n            if (options != null) {\r\n\r\n                // Extend the base object\r\n                for (let name in options) {\r\n                    let src = target[name];\r\n                    let copy = options[name];\r\n\r\n                    // Prevent never-ending loop\r\n                    if (target === copy) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Recurse if we're merging plain objects or arrays\r\n                    if (copy && (isPlainObject(copy) || Array.isArray(copy))) {\r\n\r\n                        let clone = src && (isPlainObject(src) || Array.isArray(src)) ? src : Array.isArray(copy) ? [] : {};\r\n\r\n                        // Never move original objects, clone them\r\n                        target[name] = extend(clone, copy);\r\n\r\n                        // Don't bring in undefined values\r\n                    } else if (copy !== undefined) {\r\n                        target[name] = copy;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Return the modified object\r\n        return target;\r\n    }\r\n\r\n    function isForm(element) {\r\n        return element && (element.nodeName === 'FORM' || element.tagName === 'FORM');\r\n    }\r\n\r\n    function getTopMostParent(elm) {\r\n        if (elm.parentNode) return getTopMostParent(elm.parentNode);\r\n        return elm;\r\n    }\r\n\r\n    // get padding for element\r\n    // horiz - horizontal padding/border widths\r\n    // content - include content\r\n    // outer = (1 - outerHeight 2 - outerHeight(true) )\r\n    // bord - include border size\r\n    function getDimForElm(node, { horiz, bord, content, outer } = {}) {\r\n        let dimres = 0;\r\n\r\n        function stylesCalc(elm) {\r\n            const horizf = name => name.replace('Top', 'Left').replace('Bottom', 'Right');\r\n\r\n            let mprop = 'height';\r\n            let names = ['paddingTop', 'paddingBottom'];\r\n            let bordNames = ['borderTopWidth', 'borderBottomWidth'];\r\n            let margins = ['marginTop', 'marginBottom'];\r\n\r\n            if (horiz) {\r\n                mprop = 'width';\r\n                names = names.map(horizf);\r\n                margins = margins.map(horizf);\r\n            }\r\n\r\n            const styles = getComputedStyle(elm);\r\n\r\n            const nParseFloat = (sval) => {\r\n                let res = parseFloat(sval);\r\n\r\n                // when width = 'auto'\r\n                if (isNaN(res)) {\r\n                    res = 0;\r\n                }\r\n\r\n                return res;\r\n            };\r\n\r\n            const sumStyles = snames => snames.reduce((prev, curr) => nParseFloat(styles[curr]) + prev, 0)\r\n\r\n            if (outer) {\r\n                let res = nParseFloat(styles[mprop]);\r\n\r\n                if (outer == 2) {\r\n                    res += sumStyles(margins);\r\n                }\r\n\r\n                // outerHeight/Width\r\n                return res;\r\n            }\r\n\r\n            // add border width\r\n            if (bord) {\r\n                names = [...names, ...bordNames];\r\n            }\r\n\r\n            // padding + border\r\n            let res = sumStyles(names);\r\n\r\n            if (styles.boxSizing == 'border-box') {\r\n                res = -res;\r\n            }\r\n\r\n            // content height/width\r\n            if (content) {\r\n                return parseFloat(styles[mprop]) + res;\r\n            }\r\n\r\n            return res;\r\n        }\r\n\r\n        let parent = getTopMostParent(node);\r\n\r\n        if (parent != document) {\r\n            // calling getComputedStyle(f) while f is not in document would break css transitions on f\r\n            const tempParent = document.createElement(\"div\");\r\n            tempParent.style.cssText = \"position: absolute; visibility: hidden; display: block;\"; // Hide it from view\r\n\r\n            document.body.appendChild(tempParent); // Temporarily append\r\n\r\n            tempParent.appendChild(parent);\r\n\r\n            dimres = stylesCalc(node);\r\n\r\n            tempParent.parentNode.removeChild(tempParent); // Remove it\r\n        }\r\n        else {\r\n            dimres = stylesCalc(node);\r\n        }\r\n\r\n        return dimres;\r\n    }\r\n\r\n    function wrapHandler(event) {\r\n        let data = event?.aweData;\r\n        data = Array.isArray(data) ? data : [data];\r\n\r\n        const type = event.type;\r\n        let bindings = Array.from(this.aweEvs[type]);\r\n\r\n        if (event.namespace) {\r\n            bindings = bindings.filter(b => b.ns == event.namespace);\r\n        }\r\n\r\n        // order bindings based on target and filter\r\n        const rankedBindings = bindings\r\n            .reduce((acc, b) => {\r\n                if (b.filter) {\r\n                    let res = closestRanked(event.target, b.filter);\r\n                    res && acc.push({ b: b, node: res[0], rank: res[1] });\r\n                }\r\n                return acc;\r\n            }, [])\r\n            .sort((x, y) => x.rank - y.rank)\r\n            .concat(\r\n                bindings\r\n                    .filter(b => !b.filter)\r\n                    .map(b => ({ b }))\r\n            );\r\n\r\n        let immediatePropagationStopped = false;\r\n        const orig = event.stopImmediatePropagation;\r\n        if (orig) {\r\n            event.stopImmediatePropagation = function () {\r\n                immediatePropagationStopped = true;\r\n                orig.call(event);\r\n            };\r\n        }\r\n\r\n        event.originalEvent = event;\r\n\r\n        for (const rb of rankedBindings) {\r\n            const res = rb.b.handler.call(rb.node || this, event, ...data);\r\n\r\n            if (rb.b.one) {\r\n                this.aweEvs[type].delete(rb.b);\r\n            }\r\n\r\n            if (immediatePropagationStopped || res === false) {\r\n                if (res === false) {\r\n                    event.stopPropagation();\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}(window.jQuery));"],"names":["$","aq","aquery","arg","arg2","fn","init","dataWeakMap","WeakMap","displayWeakMap","isUndef","o","isStr","isFunc","isAquery","nodes","isObject","obj","isNull","jQuery","window","toLoadOnReady","ready","document","addEventListener","loop","f","setTimeout","isAdeferred","p","adeferred","mergeErrIntoAdeferred","err","adf","errorThrown","statusText","message","status","response","extend","a","b","nargs","arguments","len","Object","assign","this","args","allprom","map","prom","promise","Promise","all","then","res","prototype","done","success","failure","self","sres","failureFunc","arg1","ares","_a","pairedResults","result","i","thennable","fail","func","catch","always","alwaysArgs","exec","finally","when","getScript","url","ajax","dataType","options","opt2","url1","data","traditional","error","contentType","method","type","serializeData","Array","isArray","jobj","key","concat","awef","serlArr","push","name","value","serlObj","item","encodeURIComponent","join","JSON","stringify","toLowerCase","fetchOptions","headers","queryString","includes","FormData","body","fetch","trigger","xhr","get","ok","json","text","Error","responseText","scriptElement","createElement","scriptAttrs","entries","setAttribute","head","appendChild","parentNode","removeChild","complete","urlOrOpt","post","inArray","val","arr","from","indexOf","grep","array","callback","filter","index","each","it","ix","Event","namespace","split","ev","MouseEvent","cancelable","bubbles","isTrusted","isSelector","node","selector","matches","isNullOrEmp","customSelector","useFilter","closestRanked","closestRankRed","rank","recalcAqArr","aqthis","n","length","remNode","detach","aweEvs","remove","reflow","firstNode","offsetWidth","ln","select","list","el","toString","replaceAll","str","search","replacement","isVisible","element","isConnected","current","getComputedStyle","display","parentElement","hide","d","style","set","startNodes","regex","test","CSS","escape","substring","simpleSelectorParse","query","sel","mustUseFilter","flatMap","querySelectorAll","results","Set","byCommaParts","parts","currentPart","inAttributeSelector","char","trim","splitSelectorByCommas","Boolean","commaPart","cnodes","bySpaceParts","spacePart","s","forEach","wpart","nlen","startsWith","parseInt","slice","add","sort","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","strToNode","tempContainer","innerHTML","childNodes","appendFragment","before","isTr","range","createRange","selectNode","frg","createContextualFragment","rows","newNode","insertBefore","r","replace","match","attr","quote","getEvParam","events","handler","eventsArr","evname","aqObj","isPlainObject","proto","getPrototypeOf","target","src","copy","clone","getTopMostParent","elm","getDimForElm","horiz","bord","content","outer","dimres","stylesCalc","horizf","mprop","names","bordNames","margins","styles","nParseFloat","sval","parseFloat","isNaN","sumStyles","snames","reduce","prev","curr","boxSizing","parent","tempParent","cssText","wrapHandler","event","aweData","bindings","ns","rankedBindings","acc","x","y","immediatePropagationStopped","orig","stopImmediatePropagation","call","originalEvent","rb","one","delete","stopPropagation","setNodes","ajaxComplete","on","ajaxError","wrap","wrapperNode","appendTo","wrapAll","append","rbrace","elmData","dataset","parse","e","first","last","l","toArray","find","children","nextUntil","filterStr","nxprop","nx","prevUntil","closest","closestSelector","argNode","isAncestor","nodeWeLookFor","parents","getAttribute","removeAttr","removeAttribute","css","prop","objval","setStyle","some","w","endsWith","k","v","outerHeight","p1","p2","includeMargin","valToSet","height","documentElement","outerWidth","isGet","borderAndPad","width","show","dval","TR","tagName","fadeOut","duration","transition","opacity","scrollTop","left","getNodeAndProp","scrollLeft","position","rect","getBoundingClientRect","ofsPrnt","offsetParent","top","offsetParentRect","lbordW","borderLeftWidth","offset","scrollY","scrollX","is","_b","_c","addClass","classList","addClasses","removeClass","remClasses","toggleClass","cssClasses","toggleClasses","cls","toggle","hasClass","contains","opt","eventsArrPrm","filterPrm","handlerPrm","evBindings","off","flt1","handler1","evType","toRemove","size","removeEventListener","NodeList","not","toRemoveNodes","cloneNode","prm","itm","prependTo","prepend","insertAdjacentHTML","prmToAdd","String","after","next","nextElementSibling","html","scripts","script","newScript","textContent","attributes","replaceChild","applyScriptsForNode","focus","empty","ename","dispatchEvent","defaultPrevented","submit","serializeArray","inputs","nodeName","elements","c","disabled","checked","eq","previousElementSibling","nextAll","sibling","prevAll","bind"],"mappings":"0BACA,SAAWA,GACP,MAAMC,EAAKC,OAAS,SAAUC,EAAKC,GAC/B,OAAO,IAAIF,OAAOG,GAAGC,KAAKH,EAAKC,EACvC,EAEUG,MAAkBC,QAClBC,MAAqBD,QAErBE,UAAqB,IAANC,EACfC,EAAST,GAAuB,iBAARA,EACxBU,EAAUV,GAAuB,mBAARA,EACzBW,EAAYX,GAAQA,aAAeD,SAAe,MAALC,OAAK,EAAAA,EAAAY,OAClDC,EAAYC,GAAuB,iBAARA,IAAqBC,EAAOD,GAEzDP,EAAQV,KACRmB,OAASnB,EAAIoB,OAAOpB,EAAIoB,OAAOD,OAASC,OAAOlB,OAASA,QAG5D,MAAMmB,EAAgB,GACtB,IAAIC,GAAQ,EAWHC,SAAAC,iBAAiB,oBAAoB,WAClCF,GAAA,EAGRG,EAAKJ,GAAeK,GAAKC,WAAWD,IAE5C,IAsBI,SAASE,EAAYC,GACjB,OAAOA,aAAaC,CACvB,CAEQ,SAAAC,EAAsBC,EAAKC,GAC5BD,IACAC,EAAIC,YAAcF,EAClBC,EAAIE,WAAaH,EAAII,QACjBH,EAAAI,aAASL,WAAKM,SAASD,OAElC,CAxBMnC,OAAAqC,OAAS,SAAUC,EAAGC,GACzB,IAAU,IAAND,EAAY,CAEZ,MAAS,IAAGE,GAASC,UACd,OAAAJ,KAAUG,EACpB,CAEG,OAAmB,IAAnBE,EAAID,WACGE,OAAOC,OAAOC,KAAMP,GAGxBK,OAAOC,UAAUH,UAC3B,EAcK,MAAAb,EAAY,SAAU3B,GACpB,GAAAyC,EAAID,WAAa,EAAG,CACpBI,KAAKC,KAAOL,UACZ,MAAMM,EAAU,IAAIN,WACfO,KAAYC,GAAAvB,EAAYuB,GAAQA,EAAKC,QAAUD,IACpDJ,KAAKK,QAAUC,QAAQC,IAAI,IAAIL,GAClC,MACQpC,EAAY,MAALV,OAAK,EAAAA,EAAAoD,MACb3B,EAAYzB,IACZ4C,KAAKjB,UAAY3B,EAEbA,EAAIqD,IACArD,EAAIqD,eAAeH,QACnBN,KAAKK,QAAUjD,EAAIqD,IAGnBT,KAAKS,IAAMrD,EAAIqD,IAGdrD,EAAIiD,UACTL,KAAKK,QAAUjD,EAAIiD,UAIvBL,KAAKK,QAAUjD,EAInB4C,KAAKS,IAAMrD,CAElB,EAiDD2B,EAAU2B,UAAUC,KAAO5B,EAAU2B,UAAUF,KA/CtC,SAAKI,EAASC,GACnB,MAAMC,EAAOd,KACT,GAAArC,EAAQmD,EAAKT,SAAU,CACnB,IAAAU,EAAOH,EAAQE,EAAKL,KACxBK,EAAKL,IAAMM,CACvB,KAAe,CACG,MAAAC,EAAcH,EAAWI,IAC3BjC,EAAsBiC,EAAMH,GAC5BD,EAAQC,IACR,KAECA,EAAAT,QAAUS,EAAKT,QAAQG,MACxB,SAAUC,SACA,MAAAS,EAAO,OAAAC,EAAKL,EAAA/B,gBAAW,EAAAoC,EAAAV,IAKzB,IAAAM,EACJ,GALIG,IACMT,EAAAS,GAINJ,EAAKb,KAAM,CACX,MAAMmB,EAAgBX,EAAIN,KAAI,CAACkB,EAAQC,KAC7B,MAAAC,EAAYT,EAAKb,KAAKqB,GACtBhC,EAASiC,EAAUnC,WAKzB,OAJImC,EAAUd,MACVY,EAASE,EAAUd,KAGhBnB,EAAS,CAAC+B,EAAQ/B,GAAU+B,KAGhCN,EAAAH,KAAWQ,EACrB,MAEGL,EAAOH,EAAQH,GAMnB,OAHAK,EAAKL,IAAMM,GAAQN,EACnBK,EAAK1B,WAAa,KAEX2B,GAAQN,CAClB,GACDO,EACP,CAEM,OAAAF,CACV,EAIS/B,EAAA2B,UAAUc,KAAO,SAAUC,GAQ1B,OAPF9D,EAAQqC,KAAKK,UACTL,KAAAK,QAAQqB,OAAOzC,IAChBD,EAAsBC,EAAKe,MAC3ByB,EAAKzB,SAINA,IACV,EAESjB,EAAA2B,UAAUiB,OAAS,WACzB,MAAMC,EAAahC,UACbiC,EAAO,IAAMnD,EAAKkD,GAAYjD,GAAKA,MASlC,OAPFhB,EAAQqC,KAAKK,aACTL,KAAAK,QAAQyB,QAAQD,GAMlB7B,IACf,EAEI9C,EAAG6E,KAAO,WACC,OAAA,IAAIhD,KAAaa,UAC3B,EAEE1C,EAAA8E,UAAY,CAACC,EAAKrB,IAAY1D,EAAGgF,KAAK,CAAED,MAAKE,SAAU,SAAUvB,YAEjE1D,EAAAgF,KAAO,SAAUE,EAASC,GACrB,IAAAC,EACAzE,EAAMuE,KACCE,EAAAF,EACGA,EAAAC,GAGd,IAAIJ,IAAEA,EAAKM,KAAAA,EAAAC,YAAMA,QAAaC,EAAON,SAAAA,EAAAO,YAAUA,GAAgBN,EAE3DO,EAASP,EAAQO,QAAUP,EAAQQ,MAAQ,MAU/C,SAASC,EAAcN,GACf,OAACA,EACAC,GAA8B,oBAAfE,GAEfI,MAAMC,QAAQR,KACfA,EAmhCZ,SAAiBS,GACb,IAAIvC,EAAM,GAEV,IAAA,IAASwC,KAAOD,EACPF,MAAMC,QAAQC,EAAKC,IAEnBxC,EAAMA,EAAIyC,OAAOC,KAAKC,QAAQJ,EAAKC,GAAMA,IADtCxC,EAAA4C,KAAK,CAAEC,KAAML,EAAKM,MAAOP,EAAKC,KAInC,OAAAxC,CACV,CA7hCkB+C,CAAQjB,IAGZA,EAAKpC,KAAYsD,GAASC,mBAAmBD,EAAKH,MAAQ,IAAMI,mBAAmBD,EAAKF,SAAWI,KAAK,MAN/CC,KAAKC,UAAUtB,GAD7D,EAQrB,CAjBGD,IACML,EAAAK,GAGVK,EAASA,EAAOmB,cAEF,OAAVnB,IAA+BH,GAAA,GAanC,MAAMuB,EAAe,CACjBpB,SAAgBqB,QAAS,CAAE,mBAAoB,mBAGnD,GAAe,QAAXrB,EAAkB,CACZ,MAAAsB,EAAcpB,EAAcN,GAC9B0B,IACOhC,GAAAA,EAAIiC,SAAS,KAAO,IAAID,IAAgB,IAAIA,IAE1D,MAEO1B,aAAgB4B,SAChBJ,EAAaK,KAAO7B,GAIPwB,EAAAK,KAAOvB,EAAcN,GACrBwB,EAAAC,QAAQ,gBAAkB,qCAIzC,MAAA3D,EAAUgE,MAAMpC,EAAK8B,GAE3B7G,EAAGsB,UAAU8F,QAAQ,WAAY,CAACjE,EAAS+B,IAE3C,MAAMmC,EAAMpH,OAAO4E,KAAK1B,EACnBG,MAAiBjB,IACd,MAAMmD,EAAcnD,EAASyE,QAAQQ,IAAI,gBAErC,OAACjF,EAASkF,IAUdF,EAAInF,WAAaG,EAASH,WAEtBsD,GAAeA,EAAYwB,SAAS,oBAC7B3E,EAASmF,OAETnF,EAASoF,QAdTpF,EAASoF,OAAOnE,MAAamE,IAChC,IAAI1F,EAAM,IAAI2F,MAAMrF,EAASH,YAIvB,MAHNH,EAAIM,SAAWA,EACfN,EAAI4F,aAAeF,EAEb1F,QAYjBuB,MAAK+B,IACF,GAAgB,UAAZJ,EAAsB,CAChB,MAAA2C,EAAgBtG,SAASuG,cAAc,UAG7C,GAFAD,EAAcH,KAAOpC,EAEjBH,EAAQ4C,YACG,IAAA,MAAC/B,EAAKM,KAAUzD,OAAOmF,QAAQ7C,EAAQ4C,aAChCF,EAAAI,aAAajC,EAAKM,GAIxC/E,SAAS2G,KAAKC,YAAYN,GAAeO,WAAWC,YAAYR,EACnE,CAGMvC,OADCH,EAAAxB,SAAWwB,EAAQxB,QAAQ2B,GAC5BA,KAEVb,OAAazC,IAGJ,MAFH/B,EAAAsB,UAAU8F,QAAQ,YAAa,CAACjE,EAAS+B,EAASnD,IACrDwD,GAASA,EAAMxD,GACTA,KAET6C,SAAQ,KACGM,EAAAmD,UAAYnD,EAAQmD,WAC5BrI,EAAGsB,UAAU8F,QAAQ,eAAgB,CAACjE,EAAS+B,QAGhD,OAAAmC,CACV,EAEErH,EAAAsH,IAAM,SAAUgB,EAAUjD,EAAM3B,GAAS+B,OAAEA,GAAW,IAMrD,OALI7E,EAAOyE,KACG3B,EAAA2B,EACHA,EAAA,MAGPiD,EAASvD,KACTuD,EAAS7C,OAAS,OACXzF,EAAGgF,KAAKsD,EAAUjD,EAAM3B,IAG5B1D,EAAGgF,KAAK,CAAED,IAAKuD,EAAUjD,OAAM3B,UAAS+B,UAClD,EAEDzF,EAAGuI,KAAO,CAACxD,EAAKM,EAAM3B,IAAY1D,EAAGsH,IAAIvC,EAAKM,EAAM3B,EAAS,CAAE+B,OAAQ,SAEpEzF,EAAAwI,QAAU,CAACC,EAAKC,IAAQ9C,MAAM+C,KAAKD,GAAKE,QAAQH,GAEnDzI,EAAG6I,KAAO,CAACC,EAAOC,IAAaD,EAAME,QAAO,CAACzC,EAAM0C,IAAUF,EAASxC,EAAM0C,KAEzEjJ,EAAAkJ,KAAO,CAACJ,EAAOrH,IAAMD,EAAKsH,GAAO,SAAUK,EAAIC,GAAa,OAAA3H,EAAE2H,EAAID,EAAK,IAEvEnJ,EAAAqJ,MAAQ,SAAU3D,GACjB,MAAOU,EAAMkD,GAAa5D,EAAK6D,MAAM,IAAK,GAEtC,IACAC,EAAK,IADU,SAARpD,EAAkBqD,WAAaJ,OACxBjD,EAFD,CAAEsD,YAAY,EAAMC,SAAS,EAAMC,WAAW,IAKxD,OAFPJ,EAAGF,UAAYA,EAERE,CACf,EAEIxJ,EAAGiD,IAAM,CAAC6F,EAAOrH,IAAMqH,EAAM7F,IAAIxB,GAE3B,MAAAoI,EAAa,CAACC,EAAMC,KAClB,IAACD,EAAKE,QAAS,OACf,GAAAC,EAAYF,GACL,OAAA,EAIJ,OAAa,IAAbpH,EADKuH,EAAe,CAACJ,GAAOC,EAAU,CAAEI,UAAW,MAIxDC,EAAgB,CAACN,EAAMC,KACzB,MAAMM,EAAiB,CAACP,EAAMC,EAAUO,KACpC,GAAKR,EACL,OAAID,EAAWC,EAAMC,GAAkB,CAACD,EAAMQ,GACvCD,EAAeP,EAAK3B,WAAY4B,EAAUO,EAAO,IAGrD,OAAAD,EAAeP,EAAMC,EAAU,IAUpCQ,EAAwBC,IACrBhJ,EAAAgJ,EAAO1J,OAAO,CAAC2J,EAAGrG,IAAMoG,EAAOpG,GAAKqG,IAClCD,EAAAE,OAAS/H,EAAI6H,EAAO1J,QAGtB,SAAA6J,EAAQF,EAAGG,GACXA,IACDH,EAAEI,OAAS,MAGfJ,EAAEK,QACL,CAGD,MAAMC,EAAiBnH,IACb,MAAAnC,EAAIuJ,EAAUpH,GAEb,OADHnC,GAAKA,EAAAwJ,YACFrH,GAmzBX,SAAS3C,EAAOwH,GACL,OAAAA,OACV,CAMQ,SAAAjH,EAAKkH,EAAKjH,GACf,GAAIiH,EACS,IAAA,IAAAtE,EAAI,EAAG8G,EAAKvI,EAAI+F,GAAMtE,EAAI8G,EAAI9G,IAAK,CAExC,IAAkB,IAAd3C,EADMiH,EAAItE,GACHA,GACP,KAEP,CAER,CAEQ,SAAA+G,EAAOC,EAAM7G,GAClB,IAAIhB,EAAM,GAKH,OAJF/B,EAAA4J,GAAM,SAAUC,EAAIjH,GACrBb,EAAI4C,KAAK5B,EAAK8G,EAAIjH,GAC9B,IAEeb,CACV,CAED,SAASZ,EAAIjC,GACF,OAACA,EAAQA,EAAEgK,OAAN,CACf,CAED,SAAST,EAAYxB,GACjB,OAAOxH,EAAOwH,IAAgC,IAAxB9F,EAAI8F,EAAI6C,WACjC,CAEQ,SAAAC,EAAWC,EAAKC,EAAQC,GAC7B,OAAOF,EAAIjC,MAAMkC,GAAQhF,KAAKiF,GAAe,GAChD,CAqCD,SAASC,EAAUC,GACf,IAAKA,IAAYA,EAAQC,YAAoB,OAAA,EAE7C,IAAIC,EAAUF,EACd,KAAOE,GAAS,CAER,GAAkB,SADR3K,OAAO4K,iBAAiBD,GAC5BE,QAA2B,OAAA,EACrCF,EAAUA,EAAQG,aACrB,CAEM,OAAA,CACV,CAYD,SAASC,EAAKzB,GACN,IAAA0B,EAAI1B,EAAE2B,MAAMJ,QACP,QAALG,IACW3L,EAAA6L,IAAI5B,EAAG0B,GACtB1B,EAAE2B,MAAMJ,QAAU,OACrB,CA8CD,SAAS9B,EAAeoC,EAAYvC,GAAUI,UAAEA,GAAc,CAAA,GAC1D,MAAMoC,EAAQ,oDACd,GAAItC,EAAYF,KAAcuC,EAAmB,OAAAA,EAUjD,GAPI,UAAUE,KAAKzC,KACfA,EAAW,IAAI0C,IAAIC,OAAO3C,EAAS4C,UAAU,OAIjD5C,EAAW6C,EAAoB7C,IAE1BwC,EAAMC,KAAKzC,GACL,OAAA8C,EAAMP,EAAYvC,GAGpB,SAAA8C,EAAM/L,EAAOgM,EAAKC,GACvB,OAAO5C,GAAa4C,EAAgBjM,EAAMkI,QAAYyB,GAAAA,EAAET,QAAQ8C,KAC5DhM,EAAMkM,YAAapH,MAAM+C,KAAK8B,EAAEwC,iBAAiBH,KACxD,CAEK,MAAAI,MAAcC,IACdC,EAhDV,SAA+BrD,GAC3B,MAAMsD,EAAQ,GACd,IAAIC,EAAc,GACdC,GAAsB,EAE1B,IAAA,IAASnJ,EAAI,EAAGA,EAAI2F,EAASW,OAAQtG,IAAK,CAChC,MAAAoJ,EAAOzD,EAAS3F,GAEtB,GAAa,MAAToJ,EACsBD,GAAA,OACtC,GAAgC,MAATC,EACeD,GAAA,OACf,GAAS,MAATC,IAAiBD,EAAqB,CACvCF,EAAAlH,KAAKmH,EAAYG,QACTH,EAAA,GACd,QACH,CAEcA,GAAAE,CAClB,CAIM,OAFPF,EAAYG,QAAUJ,EAAMlH,KAAKmH,EAAYG,QAEtCJ,CACV,CAwBwBK,CAAsB3D,GAAUf,OAAO2E,SAE5D,IAAA,MAAWC,KAAaR,EAAc,CAClC,IAAIS,EAASvB,EAEb,MAAMwB,EAAeF,EAAUrE,MAAM,KAAKP,OAAO2E,SAEjD,IAAA,MAAWI,KAAaD,EAAc,CAChBC,EAAUN,OAAOlE,MAAMgD,GAAOvD,OAAO2E,SAAS1K,KAAS+K,GAAAA,EAAEP,SAAQzE,OAAO2E,SAEhFM,SAAQ,CAACC,EAAOjF,KAClB,IAAAkF,EAAOxL,EAAIkL,GAEX,IAACM,EAAa,OAAA,EAClB,GAAc,aAAVD,EACSL,EAAAA,EAAO7E,OAAO2C,QAC1B,GACkB,YAAVuC,EACLL,EAASA,EAAO7E,QAAOyB,IAAMkB,EAAUlB,UAElC,GAAAyD,EAAME,WAAW,QAAS,CAC/B,MAAMhK,EAAIiK,SAASH,EAAMI,MAAM,OAElBT,EADTzJ,GAAK,GAAKA,EAAI+J,EACL,CAACN,EAAOzJ,IAER,EAErC,MACwByJ,EADiB,WAAVK,EACEC,EAAO,EAAI,CAACN,EAAO,IAAM,GACjB,UAAVK,EACEC,EAAO,EAAI,CAACN,EAAOM,EAAO,IAAM,GAE1B,WAAVD,EACIrB,EAAMgB,EAAQ,mCAGdhB,EAAMgB,EAAQK,IAASjF,KAM3C,CAGD4E,EAAOI,SAAQnE,GAAQoD,EAAQqB,IAAIzE,IACtC,CAEG,IAAAvG,EAAMqC,MAAM+C,KAAKuE,GAYd,OAVF/C,IACD5G,EAAMA,EAAIiL,MAAK,CAACjM,EAAGC,IACXD,IAAMC,EAAU,EAChBD,EAAEkM,wBAAwBjM,GAAKkM,KAAKC,4BAC7B,GAEJ,KAIRpL,CACV,CAOD,SAASqL,EAAU1O,GACT,MAAA2O,EAAgBvN,SAASuG,cAAc3H,EAAIkO,WAAW,OAAS,QAAU,OAExE,OADPS,EAAcC,UAAY5O,EACnB,IAAI2O,EAAcE,WAC5B,CAED,SAASC,EAAelF,EAAM5J,GAAK+O,OAAEA,GAAW,CAAA,GAC5C,IAAKnF,EAAM,OACP,IAAAoF,EAEAvO,EAAMT,IAAQA,EAAIuN,OAAOW,WAAW,SAC7Bc,EAAA,EACPhP,EAAM,iBAAiBA,qBAGrB,MAAAiP,EAAQ7N,SAAS8N,cACjBD,EAAAE,WAAW/N,SAAS4F,MACpB,MAAAoI,EAAMH,EAAMI,yBAAyBrP,GAE3C,GAAKgP,EAUA,CACK,MAAAM,EAAO5J,MAAM+C,KAAK2G,EAAIP,WAAW,GAAGA,WAAW,GAAGA,YAGpDvN,EAAKgO,EADLP,EACsBQ,GAAA3F,EAAK3B,WAAWuH,aAAaD,EAAS3F,GAGjD6F,GAAK7F,EAAK5B,YAAYyH,GAIxC,MApBOV,EACKnF,EAAA3B,WAAWuH,aAAaJ,EAAKxF,GAGlCA,EAAK5B,YAAYoH,EAmB5B,CAcD,SAAS1C,EAAoBE,GACrB,IAACA,EAAY,OAAAA,EACjB,IAAIvJ,EAAMgI,EAAWuB,EAAK,YAAa,qBAGhC,OAFDvJ,EAAAgI,EAAWhI,EAAK,SAAU,kBAChCA,EAAuBA,EAnNZqM,QAAQ,mCAAmC,CAACC,EAAOC,EAAMC,EAAOtH,IAClEsH,EAIEF,EAHI,IAAIC,MAASrH,QAkNrBlF,CACV,CAEQ,SAAAyM,EAAWC,EAAQjH,EAAQkH,GAC1B,MAAAC,EAAYF,EAAO1G,MAAM,KAC1BP,OAAO2E,SACP1K,KAAcmN,IACP,IAAA/C,EAAQ+C,EAAO7G,MAAM,KAClB,MAAA,CAAC8D,EAAM,GAAIA,EAAMiB,MAAM,GAAG7H,KAAK,SAQvC,OALH7F,EAAOoI,KACGkH,EAAAlH,EACDA,EAAA,MAGN,CAACmH,EAAWnH,EAAQkH,EAC9B,CAED,SAASlF,EAAUqF,GACX,GAAA1N,EAAW,MAAP0N,OAAO,EAAAA,EAAAvP,OACJ,OAAAuP,EAAMvP,MAAM,EAE1B,CAYD,SAASwP,EAActP,GACnB,IAAKD,EAASC,GAAa,OAAA,EAErB,MAAAuP,EAAQ3N,OAAO4N,eAAexP,GACpC,OAAOC,EAAOsP,IAAUA,IAAU3N,OAAOY,SAC5C,CAED,SAASlB,IACL,IAAImO,EAAS/N,UAAU,IAAM,CAAA,EAGxB3B,EAAS0P,IAAY7P,EAAO6P,KAC7BA,EAAS,CAAA,GAGb,IAAA,IAASrM,EAAI,EAAGA,EAAIzB,EAAID,WAAY0B,IAAK,CACjC,IAAAc,EAAUxC,UAAU0B,GAGxB,GAAe,MAAXc,EAGA,IAAA,IAASkB,KAAQlB,EAAS,CAClB,IAAAwL,EAAMD,EAAOrK,GACbuK,EAAOzL,EAAQkB,GAGnB,GAAIqK,IAAWE,EAKf,GAAIA,IAASL,EAAcK,IAAS/K,MAAMC,QAAQ8K,IAAQ,CAEtD,IAAIC,EAAQF,IAAQJ,EAAcI,IAAQ9K,MAAMC,QAAQ6K,IAAQA,EAAM9K,MAAMC,QAAQ8K,GAAQ,GAAK,GAGjGF,EAAOrK,GAAQ9D,EAAOsO,EAAOD,EAGrD,WAAwC,IAATA,IACPF,EAAOrK,GAAQuK,EAEtB,CAER,CAGM,OAAAF,CACV,CAMD,SAASI,EAAiBC,GACtB,OAAIA,EAAI3I,WAAmB0I,EAAiBC,EAAI3I,YACzC2I,CACV,CAOQ,SAAAC,EAAajH,GAAMkH,MAAEA,EAAAC,KAAOA,UAAMC,EAASC,MAAAA,GAAU,IAC1D,IAAIC,EAAS,EAEb,SAASC,EAAWP,GACV,MAAAQ,KAAiBlL,EAAKwJ,QAAQ,MAAO,QAAQA,QAAQ,SAAU,SAErE,IAAI2B,EAAQ,SACRC,EAAQ,CAAC,aAAc,iBACvBC,EAAY,CAAC,iBAAkB,qBAC/BC,EAAU,CAAC,YAAa,gBAExBV,IACQO,EAAA,QACAC,EAAAA,EAAMvO,IAAIqO,GACRI,EAAAA,EAAQzO,IAAIqO,IAGpB,MAAAK,EAAS5F,iBAAiB+E,GAE1Bc,EAAeC,IACbtO,IAAAA,EAAMuO,WAAWD,GAOdtO,OAJHwO,MAAMxO,KACNA,EAAM,GAGHA,GAGLyO,EAAYC,GAAUA,EAAOC,QAAO,CAACC,EAAMC,IAASR,EAAYD,EAAOS,IAASD,GAAM,GAE5F,GAAIhB,EAAO,CACP,IAAI5N,EAAMqO,EAAYD,EAAOJ,IAOtBhO,OALM,GAAT4N,IACA5N,GAAOyO,EAAUN,IAIdnO,CACV,CAGG0N,IACAO,EAAQ,IAAIA,KAAUC,IAItB,IAAAlO,EAAMyO,EAAUR,GAOpB,MALwB,cAApBG,EAAOU,YACP9O,GAAOA,GAIP2N,EACOY,WAAWH,EAAOJ,IAAUhO,EAGhCA,CACV,CAEG,IAAA+O,EAASzB,EAAiB/G,GAE9B,GAAIwI,GAAUhR,SAAU,CAEd,MAAAiR,EAAajR,SAASuG,cAAc,OAC1C0K,EAAWnG,MAAMoG,QAAU,0DAElBlR,SAAA4F,KAAKgB,YAAYqK,GAE1BA,EAAWrK,YAAYoK,GAEvBlB,EAASC,EAAWvH,GAETyI,EAAApK,WAAWC,YAAYmK,EACrC,MAEGnB,EAASC,EAAWvH,GAGjB,OAAAsH,CACV,CAED,SAASqB,EAAYC,GACjB,IAAIrN,EAAc,MAAPqN,OAAO,EAAAA,EAAAC,QAClBtN,EAAOO,MAAMC,QAAQR,GAAQA,EAAO,CAACA,GAErC,MAAMK,EAAOgN,EAAMhN,KACnB,IAAIkN,EAAWhN,MAAM+C,KAAK7F,KAAK+H,OAAOnF,IAElCgN,EAAMpJ,YACNsJ,EAAWA,EAAS5J,QAAOxG,GAAKA,EAAEqQ,IAAMH,EAAMpJ,aAIlD,MAAMwJ,EAAiBF,EAClBV,QAAO,CAACa,EAAKvQ,KACV,GAAIA,EAAEwG,OAAQ,CACV,IAAIzF,EAAM6G,EAAcsI,EAAMjC,OAAQjO,EAAEwG,QACxCzF,GAAOwP,EAAI5M,KAAK,CAAE3D,IAAMsH,KAAMvG,EAAI,GAAI+G,KAAM/G,EAAI,IACnD,CACM,OAAAwP,IACR,IACFvE,MAAK,CAACwE,EAAGC,IAAMD,EAAE1I,KAAO2I,EAAE3I,OAC1BtE,OACG4M,EACK5J,QAAOxG,IAAMA,EAAEwG,SACf/F,KAAIT,IAAA,CAAQA,SAGzB,IAAI0Q,GAA8B,EAClC,MAAMC,EAAOT,EAAMU,yBACfD,IACAT,EAAMU,yBAA2B,WACCF,GAAA,EAC9BC,EAAKE,KAAKX,EAC1B,GAGQA,EAAMY,cAAgBZ,EAEtB,IAAA,MAAWa,KAAMT,EAAgB,CACvB,MAAAvP,EAAMgQ,EAAG/Q,EAAE0N,QAAQmD,KAAKE,EAAGzJ,MAAQhH,KAAM4P,KAAUrN,GAMrD,GAJAkO,EAAG/Q,EAAEgR,KACL1Q,KAAK+H,OAAOnF,GAAM+N,OAAOF,EAAG/Q,GAG5B0Q,IAAuC,IAAR3P,EAAe,EAClC,IAARA,GACAmP,EAAMgB,kBAGV,KACH,CACJ,CACJ,CA30CMzT,OAAAG,GAAKH,OAAOuD,UAAY,CAC3BnD,KAAM,SAAUH,EAAKC,GAEb,OAAAS,EAAOV,IAjWQqE,EAkWJrE,OAjWfmB,EAEAK,WAAW6C,GAGXnD,EAAc+E,KAAK5B,MAiWA,iBAARrE,GAAoBA,EAAIkO,WAAW,OAC1ClO,EAAM0O,EAAU1O,IAGpB4C,KAAK6Q,SAASzT,GAEP4C,MA7WI,IAAQyB,CA8WtB,EACD+C,IAAK,SAAUlD,GACP,OAAA3D,EAAQ2D,GACDtB,KAAKhC,MAGTgC,KAAKhC,MAAMsD,EACrB,EACDwP,aAAc,SAAUrP,GACpB,OAAOvE,EAAGsB,UAAUuS,GAAG,eAAgBtP,EAC1C,EACDuP,UAAW,SAAUvP,GACjB,OAAOvE,EAAGsB,UAAUuS,GAAG,YAAatP,EACvC,EACDwP,KAAM,SAAUvI,GACN,MAAAwI,EAAcpF,EAAUpD,GAGvB,OAFP1I,KAAKmM,OAAO+E,GACZlR,KAAKmR,SAASD,GACPlR,IACV,EACDoR,QAAS,SAAU1I,GAEf,GADUR,EAAUlI,MACb,CACG,MAAAiR,EAAOnF,EAAUpD,GAClB1I,KAAAwP,SAAS6B,OAAOJ,GAChBvS,EAAAsB,KAAKhC,OAAY2J,GAAAxK,OAAO8T,GAAMI,OAAO1J,IAC7C,CAEM,OAAA3H,IACV,EACDoG,KAAM,SAAU3E,GAIL,OAHP/C,EAAKsB,KAAKhC,OAAO,SAAUgJ,EAAM1F,GAC7B,OAAOG,EAAK8O,KAAKvJ,EAAM1F,EAAG0F,EAC1C,IACmBhH,IACV,EACDuC,KAAM,SAAUe,EAAMqC,GACZ,MAAAhH,EAAIuJ,EAAUlI,MACdsR,EAAS,gCACf,GAAI3S,EAAG,CACH,IAAI4S,EAAU/T,EAAYgH,IAAI7F,IAAM,CAAA,EAEhC,GAAkB,GAAlBkB,EAAID,WACG,OAAA2R,EAGP,GAAkB,GAAlB1R,EAAID,WAAiB,CAEjB,GAAA3B,EAASqF,GAGF,OAFPiO,EAAUrU,EAAGsC,OAAO,CAAE,EAAE+R,EAASjO,GACrB9F,EAAA+L,IAAI5K,EAAG4S,GACZvR,KAGP,IAAAuC,EAAOgP,EAAQjO,GAEnB,GAAI3F,EAAQ4E,IAAS5D,EAAE6S,UACZjP,EAAA5D,EAAE6S,QAAQlO,GAEG,iBAATf,GACH,IACAA,EAAgB,SAATA,GACM,UAATA,IACa,SAATA,EAAkB,MACbA,EAAO,KAAOA,GAAQA,EACnB+O,EAAO5H,KAAKnH,GAAQqB,KAAK6N,MAAMlP,GAAQA,EACvF,OAAqCmP,GAAM,CAIhB,OAAAnP,CACV,CAMM,OAHPgP,EAAQjO,GAAQqC,EACJnI,EAAA+L,IAAI5K,EAAG4S,GAEZvR,IACV,CACJ,EACD2R,MAAO,WACI,OAAAxU,OAAO+K,EAAUlI,MAC3B,EACD4R,KAAM,WACF,MAAM5T,EAAQgC,KAAKhC,MACb6T,EAAIhS,EAAI7B,GAEd,OAAI6T,EACO1U,OAAOa,EAAM6T,EAAI,IAGrB1U,QACV,EACD2U,QAAS,WACE,OAAAhP,MAAM+C,KAAK7F,KACrB,EACD+R,KAAM,SAAU9K,GACN,MAAAxG,MAAU4J,IAMhB,OAJK3L,EAAAsB,KAAKhC,OAAY2J,IACHP,EAAA,CAACO,GAAIV,GAAUkE,SAAa0B,GAAApM,EAAIgL,IAAIoB,QAGhD1P,OAAO2F,MAAM+C,KAAKpF,GAC5B,EACDuR,SAAU,SAAU/K,GACV,MAAAxG,MAAU4J,IAKhB,OAJK3L,EAAAsB,KAAKhC,OAAY2J,IAClBP,EAAetE,MAAM+C,KAAK8B,EAAEqK,UAAW/K,EAAU,CAAEI,UAAW,IAAK8D,SAAQ0B,GAAKpM,EAAIgL,IAAIoB,QAGrF1P,OAAO2F,MAAM+C,KAAKpF,GAC5B,EACD,SAAAwR,CAAUhL,EAAUiL,GAAW7C,KAAEA,GAAS,CAAA,GAChC,MAAA5O,MAAU4J,IACV8H,EAAS9C,EAAO,yBAA2B,qBAgBjD,OAfK3Q,EAAAsB,KAAKhC,OAAY2J,IACd,IAAAyK,EAAKzK,EAAEwK,GAEX,KAAOC,IACCrL,EAAWqL,EAAInL,IAIfF,EAAWqL,EAAIF,IACfzR,EAAIgL,IAAI2G,GAEZA,EAAKA,EAAGD,MAITjV,EAAG4F,MAAM+C,KAAKpF,GACxB,EACD,SAAA4R,CAAUpL,EAAUiL,GAChB,OAAOlS,KAAKiS,UAAUhL,EAAUiL,EAAW,CAAE7C,KAAM,GACtD,EACDnJ,OAAQ,SAAU9I,GACV,IAAAqD,EASJ,OARI5C,EAAMT,KACNqD,EAAM2G,EAAepH,KAAKhC,MAAOZ,EAAK,CAAEiK,UAAW,KAGnDvJ,EAAOV,KACPqD,IAAa,MAANT,UAAM,EAAAA,KAAAhC,QAAS,IAAIkI,QAAO,CAACyB,EAAGrG,IAAMlE,EAAImT,KAAK5I,EAAGrG,EAAGqG,MAGvDxK,OAAOsD,EACjB,EACD6R,QAAS,SAAUlV,GAOT,MAAAuB,EAAIuJ,EAAUlI,MACpB,GAAIrB,EAAG,CACC,GAAAd,EAAMT,GACN,OAAOD,OAzMC,EAAC6J,EAAMC,KACvB,IAACD,EAAKsL,QAAS,OAEb,MAAA7R,EAAM6G,EAAcN,EAAMC,GAChC,OAAIpH,EAAIY,GAAaA,EAAI,QAAzB,GAqM0B8R,CAAgB5T,EAAGvB,IAEhC,CACD,IAAIoV,EAAUzU,EAASX,GAAO8K,EAAU9K,GAAOA,EAC3C,GAbH,SAAAqV,EAAWzJ,EAAS0J,GACrB,IAAAvU,EAAO6K,GACP,OAAAA,IAAY0J,GACTD,EAAWzJ,EAAQ3D,WAAYqN,EACzC,CASWD,CAAW9T,EAAG6T,GACd,OAAOrV,OAAOqV,EAErB,CACJ,CAED,OAAOrV,QACV,EACDwV,QAAS,SAAUvV,GAAc,OAAA4C,KAAKsS,QAAQlV,EAAO,EACrD4P,KAAM,SAAU1J,EAAMqC,GACd,GAAAhI,EAAQgI,GAAM,CACR,MAAAhH,EAAIuJ,EAAUlI,MAChB,OAAArB,GAAKA,EAAEiU,aACAjU,EAAEiU,aAAatP,GAEnB,IACV,CAGU,OADF5E,EAAAsB,KAAKhC,OAAO2J,GAAKA,GAAKA,EAAEzC,cAAgByC,EAAEzC,aAAa5B,EAAMqC,KAC3D3F,IAEd,EACD6S,WAAY,SAAUvP,GAEX,OADP5E,EAAKsB,KAAKhC,OAAO2J,GAAKA,EAAEmL,gBAAgBxP,KACjCtD,IACV,EACD+S,IAAK,SAAUC,EAAMrN,GACb,IAAAsN,EAEJ,MAAMC,EAAW,CAACvL,EAAGqL,EAAMrN,KACvBqN,EAAOA,EAAKlP,cACI,CAAC,OAAQ,MAAO,QAAS,SAAU,QAAS,UAEhDqP,MAAKC,GAAKJ,EAAKK,SAASD,MACb,iBAARzN,IACPA,EAAM,GAAGA,OAIfgC,EAAA2B,MAAM0J,GAAQrN,GAOpB,GAJoB,iBAATqN,IACEC,EAAAD,GAGU,IAAnBnT,EAAID,YAAqBqT,EAOpBvU,EAAAsB,KAAKhC,OAAY2J,IACdsL,EACKvU,EAAAoB,OAAOmF,QAAQgO,IAAS,EAAEK,EAAGC,MAAkBL,EAAAvL,EAAG2L,EAAGC,MAGjDL,EAAAvL,EAAGqL,EAAMrN,UAZO,CAC3B,MAAAhH,EAAIuJ,EAAUlI,MACpB,GAAIrB,EACA,OAAON,OAAO4K,iBAAiBtK,GAAGqU,EAEzC,CAYM,OAAAhT,IACV,EACDwT,YAAa,SAAUC,EAAIC,GAAIxF,MAAEA,GAAU,CAAA,GACvC,IAAIyF,EAAeC,EAgkB3B,IAAgBjO,EA9jBHxH,EAAOsV,MA+jBD,KADH9N,EA7jBO8N,KA8jBY,IAAR9N,EA7jBKgO,EAAAF,GAGLG,EAAAH,EACKE,EAAAD,IAIlB,MAAA/U,EAAIuJ,EAAUlI,MACpB,GAAIrB,EAAG,CACG,MAAAqU,EAAO9E,EAAQ,QAAU,SACzBG,EAAQsF,EAAgB,EAAI,EAElC,OAAIC,EAEO5T,KAAK6T,OAAOD,EAAU,CAAEvF,QAAOH,UAGtCvP,GAAKN,OAAeA,OAAO,QAAQ2U,KACnCrU,GAAKH,SAAiBG,EAAEmV,gBAAgB,SAASd,KAChDnK,EAAUlK,GAERsP,EAAatP,EAAG,CAAE0P,QAAOH,UAFN,CAG7B,CACJ,EACD6F,WAAY,SAAUJ,EAAetW,GACjC,OAAO2C,KAAKwT,YAAYG,EAAetW,EAAM,CAAE6Q,MAAO,GACzD,EACD2F,OAAQ,SAAUlO,GAAK0I,MAAEA,QAAOH,EAAQ,GAAM,IAC1C,MAAMvP,EAAIuJ,EAAUlI,MAChBgU,EAAQrW,EAAQgI,GAEpB,GAAIhH,EAAG,CACH,GAAIqV,EAAO,CACP,GAAIrV,GAAKN,OACL,OAAOG,SAASsV,gBAAgB5F,EAAQ,cAAgB,gBAE5D,GAAIvP,GAAKH,SACL,OAAOG,EAAEmV,gBAAgB5F,EAAQ,cAAgB,gBACrD,IAAKrF,EAAUlK,GAAW,OAAA,CAC7B,CAED,GAAIqV,EACO,OAAA/F,EAAatP,EAAG,CAAEyP,QAAS,EAAGD,KAAM,EAAGD,UAGlD,IAAI+F,EAAehG,EAAatP,EAAG,CAAEwP,KAAM,EAAGD,UAE1CG,IAEe4F,EAAA,GAGnB,IAAIL,EAAWjO,EAAMsO,EACrBjU,KAAK+S,IAAI7E,EAAQ,QAAU,SAAU0F,EACxC,CAEM,OAAA5T,IACV,EACDkU,MAAO,SAAUvO,GACb,OAAO3F,KAAK6T,OAAOlO,EAAK,CAAEuI,MAAO,GACpC,EACD9E,KAAM,WAGK,OAFP1K,EAAKsB,KAAKhC,OAAY2J,GAAAyB,EAAKzB,KAEpB3H,IACV,EACDmU,KAAM,WAGF,OAFAzV,EAAKsB,KAAKhC,OAAY2J,GA6lB9B,SAAcA,GACV,IAAIyM,EAAO1W,EAAe8G,IAAImD,IAAM,GACpCA,EAAE2B,MAAMJ,QAAUkL,EAEd,IAAAvF,EAAS5F,iBAAiBtB,GAE1B,GAAmB,SAAnBkH,EAAO3F,QAAoB,CAKpBkL,EAJW,CACdC,GAAI,aAGS1M,EAAE2M,UAAY,QAE/B3M,EAAE2B,MAAMJ,QAAUkL,CACrB,CACJ,CA5mB6BD,CAAKxM,KAEpBM,EAAOjI,KACjB,EACDuU,QAAS,SAAUC,EAAW,IAAKvO,GAUxB,OATFvH,EAAAsB,KAAKhC,OAAY2J,IAChBA,EAAA2B,MAAMmL,WAAa,WAAWD,MAChC7M,EAAE2B,MAAMoL,QAAU,EAClB9V,YAAW,KACPwK,EAAKzB,GACD1B,GAAYA,EAASsK,KAAK5I,KAC/B6M,MAGAxU,IACV,EACD2U,UAAW,SAAUhP,GAAKiP,KAAEA,GAAS,CAAA,GAE3B,MAAA5B,EAAO4B,EAAO,aAAe,YACnC,SAASC,EAAelW,GAChB,OAAAA,GAAKH,UAAYG,GAAKN,OAAe,CAACG,SAASsV,gBAAiBd,GAE7D,CAACrU,EAAGqU,EACd,CAEG,IAAArV,EAAQgI,GAoBD,OAZFjH,EAAAsB,KAAKhC,OAAY2J,IAClB,MAAOX,EAAMgM,GAAQ6B,EAAelN,GACpCX,EAAKgM,GAAQrN,KAUV3F,KApBO,CACR,MAAArB,EAAIuJ,EAAUlI,MACpB,GAAIrB,EAAG,CACH,MAAOqI,EAAMgM,GAAQ6B,EAAelW,GACpC,OAAOqI,EAAKgM,EACf,CACJ,CAgBJ,EACD8B,WAAY,SAAUnP,GAClB,OAAO3F,KAAK2U,UAAUhP,EAAK,CAAEiP,KAAM,GACtC,EACDG,SAAU,WACA,MAAA/G,EAAM9F,EAAUlI,MAChBgV,EAAOhH,EAAIiH,wBACXC,EAAUlH,EAAImH,aAEpB,IAAKD,EACD,MAAO,CAAEN,KAAMI,EAAKJ,KAAMQ,IAAKJ,EAAKI,KAGlC,MAAAC,EAAmBH,EAAQD,wBAC3BK,EAAStG,WAAW/F,iBAAiBiM,GAASK,kBAAoB,EAEjE,MAAA,CACHH,IAAKJ,EAAKI,IAAMC,EAAiBD,IAAMpH,EAAImH,aAAaR,UACxDC,KAAMI,EAAKJ,KAAOS,EAAiBT,KAAO5G,EAAImH,aAAaL,WAAaQ,EAE/E,EACDE,OAAQ,WACE,MACAR,EADM9M,EAAUlI,MACLiV,wBAEV,MAAA,CACHG,IAAKJ,EAAKI,IAAM/W,OAAOoX,QACvBb,KAAMI,EAAKJ,KAAOvW,OAAOqX,QAEhC,EACD1N,OAAQ,WAEG,OADPtJ,EAAKsB,KAAKhC,OAAY2J,GAAAE,EAAQF,KACvB3H,IACV,EACD8H,OAAQ,WAEG,OADPpJ,EAAKsB,KAAKhC,OAAO2J,GAAKE,EAAQF,EAAG,KAC1B3H,IACV,EACD2V,GAAI,SAAUvY,aACN,OAAAS,EAAMT,GACC,OAAA+D,OAAKnD,YAAL,EAAAmD,EAAYgS,MAAUxL,GAAAZ,EAAWY,EAAGvK,KACpCW,EAASX,GACT,OAAAwY,EAAA5V,KAAKhC,YAAO,EAAA4X,EAAAzC,SAAU/V,EAAIY,MAAMkG,SAASyD,KAEzC,OAAAkO,EAAK7V,KAAAhC,YAAO,EAAA6X,EAAA1C,SAAU/V,IAAQuK,GAI5C,EACDmO,SAAU,SAAUxS,GAET,OADP5E,EAAKsB,KAAKhC,OAAO2J,GAzuBN,EAACqG,EAAK1K,IAAS0K,EAAI+H,UAAUtK,QAAQnI,GAAQ,IAAIqH,OAAOlE,MAAM,KAAKP,OAAO2E,UAyuB/DmL,CAAWrO,EAAGrE,KAC7BtD,IACV,EACDiW,YAAa,SAAU3S,GAEZ,OADP5E,EAAKsB,KAAKhC,OAAO2J,GA5uBN,EAACqG,EAAK1K,IAAS0K,EAAI+H,UAAU/N,WAAW1E,GAAQ,IAAIqH,OAAOlE,MAAM,KAAKP,OAAO2E,UA4uBlEqL,CAAWvO,EAAGrE,KAC7BtD,IACV,EACDmW,YAAa,SAAUC,GAEZ,OADP1X,EAAKsB,KAAKhC,OAAO2J,IAAK0O,OA/uBPvN,EA+uBqBnB,OAAGyO,EA9uBnC3P,MAAM,KAAKP,OAAO2E,SAASM,SAAQmL,GAAOxN,EAAQiN,UAAUQ,OAAOD,KADzD,IAACxN,KAgvBR9I,IACV,EACDwW,SAAU,SAAUlT,SAChB,OAAO,OAAAnC,EAAKnB,KAAAhC,YAAO,EAAAmD,EAAAgS,MAAMxL,UAAI,OAAA,OAAAxG,EAAAwG,EAAEoO,gBAAF,EAAA5U,EAAasV,SAASnT,KACtD,EACDyN,GAAI,SAAU5D,EAAQjH,EAAQkH,EAASsJ,GAC/B,IAACC,EAAcC,EAAWC,GAAc3J,EAAWC,EAAQjH,EAAQkH,GAkBhE,OAjBPwJ,EAAY9M,EAAoB8M,GAE3BlY,EAAAsB,KAAKhC,OAAegJ,IACrB2P,EAAaxL,SAAQ,UAAWzE,EAAIqJ,IAC5B,IAAAhI,EAASf,EAAKe,QAAU,GACxB+O,EAAa/O,EAAOrB,GAEpBvI,EAAO2Y,KACF9P,EAAAvI,iBAAiBiI,EAAIiJ,GAC1B5H,EAAOrB,GAAMoQ,EAAa,IAAIzM,KAGvByM,EAAArL,IAAI,CAAEvF,OAAQ0Q,EAAWxJ,QAASyJ,EAAY9G,KAAIW,IAAU,MAALgG,OAAK,EAAAA,EAAAhG,MACvE1J,EAAKe,OAASA,CAClC,OAGmB/H,IACV,EACD0Q,IAAK,SAAUvD,EAAQjH,EAAQkH,GACpB,OAAApN,KAAK+Q,GAAG5D,EAAQjH,EAAQkH,EAAS,CAAEsD,IAAK,GAClD,EACDqG,IAAK,SAAU5J,EAAQjH,EAAQkH,GACvB,IAACuJ,EAAcC,EAAWC,GAAc3J,EAAWC,EAAQjH,EAAQkH,GAGvE,SAASL,EAAMrN,EAAGsX,EAAMC,EAAUlH,GAC9B,IAAItP,EAAM,EAcH,OAZHuW,IACMvW,EAAAA,GAAOuW,IAAStX,EAAEwG,QAGxB+Q,IACMxW,EAAAA,GAAOwW,IAAavX,EAAE0N,SAG5B2C,IACMtP,EAAAA,GAAOsP,IAAOrQ,EAAEqQ,IAGnBtP,CACV,CAsBM,OAxCPmW,EAAY9M,EAAoB8M,GAoB3BlY,EAAAsB,KAAKhC,OAAegJ,IACrB,IAAA,MAAYkQ,EAAQnH,KAAO4G,EAAc,CAC/B,MAAA5O,EAASf,EAAKe,QAAU,GACxB+H,EAAW/H,EAAOmP,GAExB,IAAKpH,EAAU,SAEf,IAAIqH,EAAWrU,MAAM+C,KAAKiK,GAAU5J,QAAYxG,GAAAqN,EAAMrN,EAAGkX,EAAWC,EAAY9G,KAE5ElQ,EAAIsX,IACJA,EAAShM,SAAQzL,GAAKoQ,EAASa,OAAOjR,KAGrCoQ,EAASsH,OACLpQ,EAAAqQ,oBAAoBH,EAAQvH,GACjC5H,EAAOmP,GAAU,KAExB,KAGElX,IACV,EACD6Q,SAAU,SAAUzT,GAEhB,IAAIY,EAAQgC,KAAKhC,MAyBV,OAtBHA,EADAZ,IAAQiB,QAAUjB,IAAQoB,SAClB,CAACpB,GAEJA,aAAeka,UAAYla,aAAe0F,MACvC,IAAI1F,GAEPA,aAAewO,KACZ,CAACxO,GAEJW,EAASX,GACNA,EAAIY,MAEPH,EAAMT,GACHgK,EAAe,CAAC5I,UAAWpB,GAG3B,KAGZ4C,KAAKhC,MAAQA,EAEbyJ,EAAYzH,MAELA,IACV,EACDyL,IAAK,SAAUrO,GACP,GAAAW,EAASX,GAAM,CACf,MAAMY,EAAQ,IAAIqM,IAAIrK,KAAKhC,OAC3BZ,EAAIY,MAAMmN,SAAQxD,GAAK3J,EAAMyN,IAAI9D,KAC5B3H,KAAAhC,MAAQ,IAAIA,GACjByJ,EAAYzH,KACf,CAEM,OAAAA,IACV,EACDuX,IAAK,SAAUna,GACP,IAAAoa,EAQG,OANHA,EADA3Z,EAAMT,GACUgK,EAAepH,KAAKhC,MAAOZ,EAAK,CAAEiK,UAAW,IAG7CvE,MAAM+C,KAAKzI,GAGxBD,OAAO6C,KAAKhC,MAAMkI,QAAOyB,IAAM6P,EAActT,SAASyD,KAChE,EACDmG,MAAO,WACI,OAAA3Q,OAAOkL,EAAOrI,KAAKhC,UAAY2J,EAAE8P,WAAU,KACrD,EACDpG,OAAQ,SAAUjU,GAGL,SAAAqO,EAAIzE,EAAM0Q,GACX5U,MAAMC,QAAQ2U,GACdhZ,EAAKgZ,GAAKC,GAAOlM,EAAIzE,EAAM2Q,KAEtB5Z,EAAS2Z,GACdhZ,EAAKgZ,EAAI1Z,OAAO2J,GAAKX,EAAK5B,YAAYuC,KAEjC+P,aAAe9L,KACpB5E,EAAK5B,YAAYsS,GAGjBxL,EAAelF,EAAM0Q,EAE5B,CAID,OAFAhZ,EAAKsB,KAAKhC,OAAO2J,GAAK8D,EAAI9D,EAAGvK,KAEtB6K,EAAOjI,KACjB,EACDmR,SAAU,SAAU/T,GAET,OADAD,OAAAC,GAAKiU,OAAOrR,MACZA,IACV,EACD4X,UAAW,SAAUxa,GAEV,OADAD,OAAAC,GAAKya,QAAQ7X,MACbA,IACV,EACD6X,QAAS,SAAUza,GAUR,OATFsB,EAAAsB,KAAKhC,OAAY2J,IACd9J,EAAMT,GACJuK,EAAAmQ,mBAAmB,aAAc1a,GAE9BW,EAASX,IACduK,EAAEkQ,QAAQza,EAAIY,MAAM,OAIrBgC,IACV,EACDmM,OAAQ,SAAU/O,GAEL,SAAAqO,EAAI9D,EAAGoQ,GACRjV,MAAMC,QAAQgV,GACdrZ,EAAKqZ,GAAUJ,GAAOlM,EAAI9D,EAAGgQ,KAExB5Z,EAASga,GACdrZ,EAAKqZ,EAAS/Z,OAAOgJ,GAAQyE,EAAI9D,EAAGX,KAE/B+Q,aAAoBnM,KAEvBjE,EAAAtC,WAAWuH,aAAamL,EAAUpQ,GAE/B9J,EAAMka,GACX7L,EAAevE,EAAGoQ,EAAU,CAAE5L,OAAQ,IAItCD,EAAevE,EAAGqQ,OAAOD,GAAW,CAAE5L,OAAQ,GAErD,CAIM,OAFPzN,EAAKsB,KAAKhC,OAAO2J,GAAK8D,EAAI9D,EAAGvK,KAEtB4C,IACV,EACDiY,MAAO,SAAU7a,SACP,MAAAuB,EAAIuJ,EAAUlI,MACpB,GAAIrB,EACI,GAAAd,EAAMT,GACJuB,EAAAmZ,mBAAmB,WAAY1a,QACpC,GACQW,EAASX,GAAM,CACpB,MAAM8a,EAAOvZ,EAAEwZ,mBACXD,EACAA,EAAK7S,WAAWuH,aAAaxP,EAAIY,MAAM,GAAIka,GAE3C,OAAA/W,EAAAxC,EAAE0G,aAAFlE,EAAciE,YAAYhI,EAAIY,MAAM,GAE3C,CAGE,OAAAgC,IACV,EACDoY,KAAM,SAAUhb,GACN,MAAAuB,EAAIuJ,EAAUlI,MACpB,OAAIrB,IAAMkB,EAAID,WACHjB,EAAEqN,WAGJtN,EAAAsB,KAAKhC,OAAY2J,IA0ZzB,IAAmBX,EAAMoR,EAzZbna,EAASb,GAIHD,OAAAwK,GAAG0J,OAAOjU,IAqZHgb,EAxZQhb,GAwZd4J,EAxZWW,GAyZ9BqE,UAAYoM,EAiDrB,SAA6BpR,GACnB,MAAAqR,EAAUrR,EAAKmD,iBAAiB,UAC9BkO,EAAAlN,SAASmN,IACP,MAAAC,EAAY/Z,SAASuG,cAAc,UACzCwT,EAAUC,YAAcF,EAAOE,YAE/B1V,MAAM+C,KAAKyS,EAAOG,YAAYtN,SAAQ6B,IAAUuL,EAAUrT,aAAa8H,EAAK1J,KAAM0J,EAAKzJ,UAEhF+U,EAAAjT,WAAWqT,aAAaH,EAAWD,KAEjD,CA1DGK,CAAoB3R,OAnZLhH,KAEd,EACD4Y,MAAO,WACG,MAAAja,EAAIuJ,EAAUlI,MAIb,OAHHrB,GAAKA,EAAEia,OACPja,EAAEia,QAEC5Y,IACV,EACD6Y,MAAO,WAEI,OADPna,EAAKsB,KAAKhC,OAAY2J,GAAAA,EAAEqE,UAAY,KAC7BhM,IACV,EACD2F,IAAK,SAAUvI,GACP,GAAAyC,EAAID,WAOG,OANDxC,EAAAe,EAAOf,GAAO,GAAKA,EAEpBsB,EAAAsB,KAAKhC,OAAY2J,IAClBA,EAAEpE,MAAQnG,KAGP4C,KAGL,MAAArB,EAAIuJ,EAAUlI,MACpB,OAAU,MAAHrB,OAAG,EAAAA,EAAA4E,KACb,EACDyP,KAAM,SAAU1P,EAAMqC,GACZ,MAAAhH,EAAIuJ,EAAUlI,MAKpB,MAJY,SAARsD,IACOA,EAAA,aAGP3E,GAAuB,GAAlBkB,EAAID,WACFjB,EAAE2E,IAGR5E,EAAAsB,KAAKhC,OAAY2J,IAClBA,EAAErE,GAAQqC,KAGP3F,KACV,EACDsE,QAAS,SAAUhB,EAAMf,GAEd,OADP7D,EAAKsB,KAAKhC,OAAO2J,GAkKhB,SAAQqG,EAAK8K,EAAOvW,GACrB1C,EAAImO,IAAyB,UAAjB,MAAAA,OAAA,EAAAA,EAAKsG,WACjBtG,EAAMA,EAAI,IAGd,GAAIA,EAAK,CACL,MAAMtH,EAAsB,iBAAVoS,EAAqBA,EAAQ5b,EAAGqJ,MAAMuS,GAExDpS,EAAGmJ,QAAUtN,EACbyL,EAAI+K,cAAcrS,GAEbA,EAAGsS,mBACU,UAAVF,GACI9K,EAAA4K,OAAS5K,EAAI4K,QAGP,WAAVE,GACI9K,EAAAiL,QAAUjL,EAAIiL,SAG7B,CACJ,CAvL6B3U,CAAQqD,EAAGrE,EAAMf,KAChCvC,IACV,EACDkZ,eAAgB,WACZ,IAAIzY,EAAM,GACN0Y,MAAa9O,IAoBV,OAlBF3L,EAAAsB,KAAKhC,OAAY2J,IAsf9B,IAAgBmB,MArfOnB,IAsfqB,SAArBmB,EAAQsQ,UAA2C,SAApBtQ,EAAQwL,QAlf9C6E,EAAO1N,IAAI9D,GAHV,IAAGA,EAAE0R,UAAUlO,SAAamO,GAAAH,EAAO1N,IAAI6N,QAOhD5a,EAAK,IAAIya,IAET,SAAwBxR,GAChB,IAAArE,EA6aP,SAAK0K,EAAK1K,EAAMqC,GACjB,GAAAqI,GAAO3P,QAAU2P,GAAOxP,SAAU,OAClC,OAAAb,EAAQgI,GACDqI,EAAI4E,aAAatP,GAGjB0K,EAAI9I,aAAa5B,EAAMqC,EAErC,CArbsBqH,CAAKrF,EAAG,QACdA,EAAE4R,WAAYjW,GAAU,CAAC,WAAY,SAASY,SAASyD,EAAE/E,QAAS+E,EAAE6R,SACrE/Y,EAAI4C,KAAK,CAAEC,OAAYC,MAAOoE,EAAEpE,OAEvC,IAEM9C,CACV,EACD0F,MAAO,SAAU/I,GACP,MAAAuB,EAAIuJ,EAAUlI,MACpB,GAAIrB,EACA,OAAIvB,GAEIW,EAASX,KACTA,EAAM8K,EAAU9K,IAGb0F,MAAMpC,UAAUoF,QAAQyK,KAAKvQ,KAAKhC,MAAOZ,IAG/CuB,EAAE0G,WAIAvC,MAAMpC,UAAUoF,QAAQyK,KAAK5R,EAAE0G,WAAW2M,SAAUrT,GAHhDmE,MAAMpC,UAAUoF,QAAQyK,KAAKvQ,KAAKhC,MAAOW,EAK3D,EACD8a,GAAI,SAAUnY,GACV,OAAIzB,EAAIG,KAAKhC,OAASsD,EACXnE,OAAO6C,KAAKhC,MAAMsD,IAGtBnE,QACV,EACDkS,KAAM,WACI,MAAA1Q,EAAIuJ,EAAUlI,MACpB,OAAIrB,EACOxB,OAAOwB,EAAE+a,wBAEb1Z,IACV,EACDkY,KAAM,WACI,MAAAvZ,EAAIuJ,EAAUlI,MACpB,OAAIrB,EACOxB,OAAOwB,EAAEwZ,oBAEbnY,IACV,EACDwP,OAAQ,WACE,MAAA7Q,EAAIuJ,EAAUlI,MACpB,OAAIrB,EACOxB,OAAOwB,EAAE0G,YAGb,IACV,EACDsU,QAAS,SAAU1S,GAAUoI,KAAEA,GAAS,CAAA,GAChC,IAAA5O,MAAU4J,IACV2I,EAAO3D,EAAO,yBAA2B,qBAiB7C,OAfK3Q,EAAAsB,KAAKhC,OAAY2J,IACd,IAAAuQ,EAAOvQ,EAAEqL,GAEb,KAAOkF,GACHzX,EAAIgL,IAAIyM,GACRA,EAAOA,EAAKlF,MAIdvS,EAAAqC,MAAM+C,KAAKpF,GAEbwG,IACAxG,EAAMA,EAAIyF,QAAO0T,GAAWA,EAAQ1S,QAAQD,MAGzC9J,OAAOsD,EACjB,EACDoZ,QAAS,SAAU5S,GACf,OAAOjH,KAAK2Z,QAAQ1S,EAAU,CAAEoI,KAAM,GACzC,EACDlP,IAAK,SAAUsB,GAEJ,OADPzB,KAAK6Q,SAASxI,EAAOrI,KAAKhC,OAAO,CAAC2J,EAAGrG,IAAMG,EAAK8O,KAAK5I,EAAGrG,EAAGqG,MACpD3H,IACV,EACD8Z,KAAM,SAAUlK,EAAOxC,GACZ,OAAApN,KAAK+Q,GAAGnB,EAAOxC,EACzB,GAGEjQ,OAAAG,GAAGC,KAAKmD,UAAYvD,OAAOG,GAElC,CAAC,QAAS,SAAU,UAAW,QAAS,YAAa,UAAW,SAAU,YAAY6N,aAAgBhO,cAAOG,GAAGsF,IAE1FU,EAF+GV,EAG1H,SAAUwK,GACT,OAACvN,EAAID,WAIFI,KAAK+Q,GAAGzN,EAAM8J,GAHVpN,KAAKsE,QAAQhB,EAI3B,GAPL,IAAsBA,IAsiB1B,CA9rDA,CA8rDEjF,OAAOD"}